# ******* WARNING - AUTO GENERATED CODE - DO NOT EDIT *******

module VimSdk
  module VmomiSupport

    add_version("vmodl.query.version.version1", "", "", false, "vim25")
    add_version("vmodl.query.version.version2", "", "", false, "vim25")
    add_version("vmodl.query.version.version3", "", "", false, "vim25")
    add_version("vmodl.query.version.version4", "", "", false, "vim25")
    add_version("eam.version.version6", "eam", "6.0", false, "eam")
    add_version("vmodl.reflect.version.version1", "reflect", "1.0", false, "reflect")
    add_version("eam.version.version1", "eam", "1.0", false, "eam")
    add_version("eam.version.version2", "eam", "2.0", false, "eam")
    add_version("eam.version.version3", "eam", "3.0", false, "eam")
    add_version("eam.version.version2_5", "eam", "2_5", false, "eam")
    add_version("vim.version.version1", "vim2", "2.0", false, "vim25")
    add_version("vim.version.version2", "vim25", "2.5", false, "vim25")
    add_version("vim.version.version3", "vim25", "2.5u2", false, "vim25")
    add_version("vim.version.version4", "vim25", "2.5u2server", false, "vim25")
    add_version("vim.version.version5", "vim25", "4.0", false, "vim25")
    add_version("vim.version.version6", "vim25", "4.1", false, "vim25")
    add_version("vim.version.version7", "vim25", "5.0", false, "vim25")
    add_version("vim.version.version8", "vim25", "5.1", false, "vim25")
    add_version("vmodl.version.version2", "", "", false, "vim25")
    add_version("vmodl.version.version1", "", "", false, "vim25")
    add_version("vmodl.version.version0", "", "", false, "vim25")
    add_version_parent("vmodl.query.version.version1", "vmodl.query.version.version1")
    add_version_parent("vmodl.query.version.version1", "vmodl.version.version0")
    add_version_parent("vmodl.query.version.version2", "vmodl.query.version.version1")
    add_version_parent("vmodl.query.version.version2", "vmodl.query.version.version2")
    add_version_parent("vmodl.query.version.version2", "vmodl.version.version1")
    add_version_parent("vmodl.query.version.version2", "vmodl.version.version0")
    add_version_parent("vmodl.query.version.version3", "vmodl.query.version.version1")
    add_version_parent("vmodl.query.version.version3", "vmodl.query.version.version2")
    add_version_parent("vmodl.query.version.version3", "vmodl.query.version.version3")
    add_version_parent("vmodl.query.version.version3", "vmodl.version.version1")
    add_version_parent("vmodl.query.version.version3", "vmodl.version.version0")
    add_version_parent("vmodl.query.version.version4", "vmodl.query.version.version1")
    add_version_parent("vmodl.query.version.version4", "vmodl.query.version.version2")
    add_version_parent("vmodl.query.version.version4", "vmodl.query.version.version3")
    add_version_parent("vmodl.query.version.version4", "vmodl.query.version.version4")
    add_version_parent("vmodl.query.version.version4", "vmodl.version.version2")
    add_version_parent("vmodl.query.version.version4", "vmodl.version.version1")
    add_version_parent("vmodl.query.version.version4", "vmodl.version.version0")
    add_version_parent("eam.version.version6", "vmodl.query.version.version1")
    add_version_parent("eam.version.version6", "vmodl.query.version.version2")
    add_version_parent("eam.version.version6", "vmodl.query.version.version3")
    add_version_parent("eam.version.version6", "vmodl.query.version.version4")
    add_version_parent("eam.version.version6", "eam.version.version6")
    add_version_parent("eam.version.version6", "vmodl.reflect.version.version1")
    add_version_parent("eam.version.version6", "eam.version.version1")
    add_version_parent("eam.version.version6", "eam.version.version2")
    add_version_parent("eam.version.version6", "eam.version.version3")
    add_version_parent("eam.version.version6", "eam.version.version2_5")
    add_version_parent("eam.version.version6", "vim.version.version1")
    add_version_parent("eam.version.version6", "vim.version.version2")
    add_version_parent("eam.version.version6", "vim.version.version3")
    add_version_parent("eam.version.version6", "vim.version.version4")
    add_version_parent("eam.version.version6", "vim.version.version5")
    add_version_parent("eam.version.version6", "vim.version.version6")
    add_version_parent("eam.version.version6", "vim.version.version7")
    add_version_parent("eam.version.version6", "vim.version.version8")
    add_version_parent("eam.version.version6", "vmodl.version.version2")
    add_version_parent("eam.version.version6", "vmodl.version.version1")
    add_version_parent("eam.version.version6", "vmodl.version.version0")
    add_version_parent("vmodl.reflect.version.version1", "vmodl.reflect.version.version1")
    add_version_parent("vmodl.reflect.version.version1", "vmodl.version.version2")
    add_version_parent("vmodl.reflect.version.version1", "vmodl.version.version1")
    add_version_parent("vmodl.reflect.version.version1", "vmodl.version.version0")
    add_version_parent("eam.version.version1", "vmodl.query.version.version1")
    add_version_parent("eam.version.version1", "vmodl.query.version.version2")
    add_version_parent("eam.version.version1", "vmodl.query.version.version3")
    add_version_parent("eam.version.version1", "vmodl.query.version.version4")
    add_version_parent("eam.version.version1", "vmodl.reflect.version.version1")
    add_version_parent("eam.version.version1", "eam.version.version1")
    add_version_parent("eam.version.version1", "vim.version.version1")
    add_version_parent("eam.version.version1", "vim.version.version2")
    add_version_parent("eam.version.version1", "vim.version.version3")
    add_version_parent("eam.version.version1", "vim.version.version4")
    add_version_parent("eam.version.version1", "vim.version.version5")
    add_version_parent("eam.version.version1", "vim.version.version6")
    add_version_parent("eam.version.version1", "vim.version.version7")
    add_version_parent("eam.version.version1", "vim.version.version8")
    add_version_parent("eam.version.version1", "vmodl.version.version2")
    add_version_parent("eam.version.version1", "vmodl.version.version1")
    add_version_parent("eam.version.version1", "vmodl.version.version0")
    add_version_parent("eam.version.version2", "vmodl.query.version.version1")
    add_version_parent("eam.version.version2", "vmodl.query.version.version2")
    add_version_parent("eam.version.version2", "vmodl.query.version.version3")
    add_version_parent("eam.version.version2", "vmodl.query.version.version4")
    add_version_parent("eam.version.version2", "vmodl.reflect.version.version1")
    add_version_parent("eam.version.version2", "eam.version.version1")
    add_version_parent("eam.version.version2", "eam.version.version2")
    add_version_parent("eam.version.version2", "vim.version.version1")
    add_version_parent("eam.version.version2", "vim.version.version2")
    add_version_parent("eam.version.version2", "vim.version.version3")
    add_version_parent("eam.version.version2", "vim.version.version4")
    add_version_parent("eam.version.version2", "vim.version.version5")
    add_version_parent("eam.version.version2", "vim.version.version6")
    add_version_parent("eam.version.version2", "vim.version.version7")
    add_version_parent("eam.version.version2", "vim.version.version8")
    add_version_parent("eam.version.version2", "vmodl.version.version2")
    add_version_parent("eam.version.version2", "vmodl.version.version1")
    add_version_parent("eam.version.version2", "vmodl.version.version0")
    add_version_parent("eam.version.version3", "vmodl.query.version.version1")
    add_version_parent("eam.version.version3", "vmodl.query.version.version2")
    add_version_parent("eam.version.version3", "vmodl.query.version.version3")
    add_version_parent("eam.version.version3", "vmodl.query.version.version4")
    add_version_parent("eam.version.version3", "vmodl.reflect.version.version1")
    add_version_parent("eam.version.version3", "eam.version.version1")
    add_version_parent("eam.version.version3", "eam.version.version2")
    add_version_parent("eam.version.version3", "eam.version.version3")
    add_version_parent("eam.version.version3", "eam.version.version2_5")
    add_version_parent("eam.version.version3", "vim.version.version1")
    add_version_parent("eam.version.version3", "vim.version.version2")
    add_version_parent("eam.version.version3", "vim.version.version3")
    add_version_parent("eam.version.version3", "vim.version.version4")
    add_version_parent("eam.version.version3", "vim.version.version5")
    add_version_parent("eam.version.version3", "vim.version.version6")
    add_version_parent("eam.version.version3", "vim.version.version7")
    add_version_parent("eam.version.version3", "vim.version.version8")
    add_version_parent("eam.version.version3", "vmodl.version.version2")
    add_version_parent("eam.version.version3", "vmodl.version.version1")
    add_version_parent("eam.version.version3", "vmodl.version.version0")
    add_version_parent("eam.version.version2_5", "vmodl.query.version.version1")
    add_version_parent("eam.version.version2_5", "vmodl.query.version.version2")
    add_version_parent("eam.version.version2_5", "vmodl.query.version.version3")
    add_version_parent("eam.version.version2_5", "vmodl.query.version.version4")
    add_version_parent("eam.version.version2_5", "vmodl.reflect.version.version1")
    add_version_parent("eam.version.version2_5", "eam.version.version1")
    add_version_parent("eam.version.version2_5", "eam.version.version2")
    add_version_parent("eam.version.version2_5", "eam.version.version2_5")
    add_version_parent("eam.version.version2_5", "vim.version.version1")
    add_version_parent("eam.version.version2_5", "vim.version.version2")
    add_version_parent("eam.version.version2_5", "vim.version.version3")
    add_version_parent("eam.version.version2_5", "vim.version.version4")
    add_version_parent("eam.version.version2_5", "vim.version.version5")
    add_version_parent("eam.version.version2_5", "vim.version.version6")
    add_version_parent("eam.version.version2_5", "vim.version.version7")
    add_version_parent("eam.version.version2_5", "vim.version.version8")
    add_version_parent("eam.version.version2_5", "vmodl.version.version2")
    add_version_parent("eam.version.version2_5", "vmodl.version.version1")
    add_version_parent("eam.version.version2_5", "vmodl.version.version0")
    add_version_parent("vim.version.version1", "vmodl.query.version.version1")
    add_version_parent("vim.version.version1", "vim.version.version1")
    add_version_parent("vim.version.version1", "vmodl.version.version0")
    add_version_parent("vim.version.version2", "vmodl.query.version.version1")
    add_version_parent("vim.version.version2", "vim.version.version1")
    add_version_parent("vim.version.version2", "vim.version.version2")
    add_version_parent("vim.version.version2", "vmodl.version.version0")
    add_version_parent("vim.version.version3", "vmodl.query.version.version1")
    add_version_parent("vim.version.version3", "vim.version.version1")
    add_version_parent("vim.version.version3", "vim.version.version2")
    add_version_parent("vim.version.version3", "vim.version.version3")
    add_version_parent("vim.version.version3", "vmodl.version.version0")
    add_version_parent("vim.version.version4", "vmodl.query.version.version1")
    add_version_parent("vim.version.version4", "vim.version.version1")
    add_version_parent("vim.version.version4", "vim.version.version2")
    add_version_parent("vim.version.version4", "vim.version.version3")
    add_version_parent("vim.version.version4", "vim.version.version4")
    add_version_parent("vim.version.version4", "vmodl.version.version0")
    add_version_parent("vim.version.version5", "vmodl.query.version.version1")
    add_version_parent("vim.version.version5", "vmodl.query.version.version2")
    add_version_parent("vim.version.version5", "vim.version.version1")
    add_version_parent("vim.version.version5", "vim.version.version2")
    add_version_parent("vim.version.version5", "vim.version.version3")
    add_version_parent("vim.version.version5", "vim.version.version4")
    add_version_parent("vim.version.version5", "vim.version.version5")
    add_version_parent("vim.version.version5", "vmodl.version.version1")
    add_version_parent("vim.version.version5", "vmodl.version.version0")
    add_version_parent("vim.version.version6", "vmodl.query.version.version1")
    add_version_parent("vim.version.version6", "vmodl.query.version.version2")
    add_version_parent("vim.version.version6", "vmodl.query.version.version3")
    add_version_parent("vim.version.version6", "vim.version.version1")
    add_version_parent("vim.version.version6", "vim.version.version2")
    add_version_parent("vim.version.version6", "vim.version.version3")
    add_version_parent("vim.version.version6", "vim.version.version4")
    add_version_parent("vim.version.version6", "vim.version.version5")
    add_version_parent("vim.version.version6", "vim.version.version6")
    add_version_parent("vim.version.version6", "vmodl.version.version1")
    add_version_parent("vim.version.version6", "vmodl.version.version0")
    add_version_parent("vim.version.version7", "vmodl.query.version.version1")
    add_version_parent("vim.version.version7", "vmodl.query.version.version2")
    add_version_parent("vim.version.version7", "vmodl.query.version.version3")
    add_version_parent("vim.version.version7", "vmodl.query.version.version4")
    add_version_parent("vim.version.version7", "vmodl.reflect.version.version1")
    add_version_parent("vim.version.version7", "vim.version.version1")
    add_version_parent("vim.version.version7", "vim.version.version2")
    add_version_parent("vim.version.version7", "vim.version.version3")
    add_version_parent("vim.version.version7", "vim.version.version4")
    add_version_parent("vim.version.version7", "vim.version.version5")
    add_version_parent("vim.version.version7", "vim.version.version6")
    add_version_parent("vim.version.version7", "vim.version.version7")
    add_version_parent("vim.version.version7", "vmodl.version.version2")
    add_version_parent("vim.version.version7", "vmodl.version.version1")
    add_version_parent("vim.version.version7", "vmodl.version.version0")
    add_version_parent("vim.version.version8", "vmodl.query.version.version1")
    add_version_parent("vim.version.version8", "vmodl.query.version.version2")
    add_version_parent("vim.version.version8", "vmodl.query.version.version3")
    add_version_parent("vim.version.version8", "vmodl.query.version.version4")
    add_version_parent("vim.version.version8", "vmodl.reflect.version.version1")
    add_version_parent("vim.version.version8", "vim.version.version1")
    add_version_parent("vim.version.version8", "vim.version.version2")
    add_version_parent("vim.version.version8", "vim.version.version3")
    add_version_parent("vim.version.version8", "vim.version.version4")
    add_version_parent("vim.version.version8", "vim.version.version5")
    add_version_parent("vim.version.version8", "vim.version.version6")
    add_version_parent("vim.version.version8", "vim.version.version7")
    add_version_parent("vim.version.version8", "vim.version.version8")
    add_version_parent("vim.version.version8", "vmodl.version.version2")
    add_version_parent("vim.version.version8", "vmodl.version.version1")
    add_version_parent("vim.version.version8", "vmodl.version.version0")
    add_version_parent("vmodl.version.version2", "vmodl.version.version2")
    add_version_parent("vmodl.version.version2", "vmodl.version.version1")
    add_version_parent("vmodl.version.version2", "vmodl.version.version0")
    add_version_parent("vmodl.version.version1", "vmodl.version.version1")
    add_version_parent("vmodl.version.version1", "vmodl.version.version0")
    add_version_parent("vmodl.version.version0", "vmodl.version.version0")
    newestVersions.add("eam.version.version6")
    currentVersions.add("eam.version.version6")
    stableVersions.add("eam.version.version6")
    matureVersions.add("eam.version.version6")
    publicVersions.add("eam.version.version6")
    oldestVersions.add("eam.version.version1")
    create_managed_type("eam.EamObject", "EamObject", "vmodl.ManagedObject", "eam.version.version1", nil, [["resolve", "Resolve", "eam.version.version1", [["issueKey", "int[]", "eam.version.version1", {}, nil]], [{:optional => true}, "int[]", "int[]"], nil, nil], ["resolveAll", "ResolveAll", "eam.version.version1", [], [{}, "void", "void"], nil, nil], ["queryIssue", "QueryIssue", "eam.version.version1", [["issueKey", "int[]", "eam.version.version1", {:optional => true}, nil]], [{:optional => true}, "eam.issue.Issue[]", "eam.issue.Issue[]"], nil, nil]])
    create_data_type("eam.EamObject.RuntimeInfo", "EamObjectRuntimeInfo", "vmodl.DynamicData", "eam.version.version1", [["status", "string", "eam.version.version1"], ["issue", "eam.issue.Issue[]", "eam.version.version1", {:optional => true}], ["goalState", "string", "eam.version.version1"], ["entity", "eam.EamObject", "eam.version.version1"]])
    create_enum_type("eam.EamObject.RuntimeInfo.Status", "EamObjectRuntimeInfoStatus", "eam.version.version1", ["green", "yellow", "red"])
    create_enum_type("eam.EamObject.RuntimeInfo.GoalState", "EamObjectRuntimeInfoGoalState", "eam.version.version1", ["enabled", "disabled", "uninstalled"])
    create_managed_type("eam.Task", "EamTask", "vmodl.ManagedObject", "eam.version.version1", nil, nil)
    create_data_type("eam.fault.EamFault", "EamFault", "vmodl.MethodFault", "eam.version.version1", nil)
    create_data_type("eam.fault.EamRuntimeFault", "EamRuntimeFault", "vmodl.RuntimeFault", "eam.version.version1", nil)
    create_data_type("eam.fault.InvalidAgencyScope", "InvalidAgencyScope", "eam.fault.EamFault", "eam.version.version1", [["unknownComputeResource", "vim.ComputeResource[]", "eam.version.version1", {:optional => true}]])
    create_data_type("eam.fault.InvalidLogin", "EamInvalidLogin", "eam.fault.EamRuntimeFault", "eam.version.version1", nil)
    create_data_type("eam.fault.InvalidUrl", "InvalidUrl", "eam.fault.EamFault", "eam.version.version1", [["url", "string", "eam.version.version1"], ["malformedUrl", "boolean", "eam.version.version1"], ["unknownHost", "boolean", "eam.version.version1"], ["connectionRefused", "boolean", "eam.version.version1"], ["responseCode", "int", "eam.version.version1", {:optional => true}]])
    create_data_type("eam.fault.InvalidVibPackage", "EamInvalidVibPackage", "eam.fault.EamRuntimeFault", "eam.version.version1", nil)
    create_data_type("eam.fault.NoConnectionToVCenter", "NoConnectionToVCenter", "eam.fault.EamRuntimeFault", "eam.version.version1", nil)
    create_data_type("eam.fault.NotAuthorized", "NotAuthorized", "eam.fault.EamRuntimeFault", "eam.version.version1", nil)
    create_data_type("eam.issue.Issue", "Issue", "vmodl.DynamicData", "eam.version.version1", [["key", "int", "eam.version.version1"], ["description", "string", "eam.version.version1"], ["time", "vmodl.DateTime", "eam.version.version1"]])
    create_data_type("eam.vib.VibInfo", "VibVibInfo", "vmodl.DynamicData", "eam.version.version6", [["id", "string", "eam.version.version6"], ["name", "string", "eam.version.version6"], ["version", "string", "eam.version.version6"], ["vendor", "string", "eam.version.version6"], ["summary", "string", "eam.version.version6"], ["releaseDate", "vmodl.DateTime", "eam.version.version6"]])
    create_managed_type("eam.vib.VibServices", "VibVibServices", "vmodl.ManagedObject", "eam.version.version6", nil, [["packageContent", "PackageContent", "eam.version.version6", [["vibPackageUrl", "string", "eam.version.version6", {}, nil]], [{}, "eam.vib.VibInfo[]", "eam.vib.VibInfo[]"], nil, nil]])
    create_managed_type("eam.Agent", "Agent", "eam.EamObject", "eam.version.version1", [["runtime", "eam.Agent.RuntimeInfo", "eam.version.version1", {}, nil], ["config", "eam.Agent.ConfigInfo", "eam.version.version1", {}, nil]], [["queryRuntime", "AgentQueryRuntime", "eam.version.version1", [], [{}, "eam.Agent.RuntimeInfo", "eam.Agent.RuntimeInfo"], nil, nil], ["markAsAvailable", "MarkAsAvailable", "eam.version.version1", [], [{}, "void", "void"], nil, nil], ["queryConfig", "AgentQueryConfig", "eam.version.version1", [], [{}, "eam.Agent.ConfigInfo", "eam.Agent.ConfigInfo"], nil, nil]])
    create_data_type("eam.Agent.RuntimeInfo", "AgentRuntimeInfo", "eam.EamObject.RuntimeInfo", "eam.version.version1", [["vmPowerState", "vim.VirtualMachine.PowerState", "eam.version.version1"], ["receivingHeartBeat", "boolean", "eam.version.version1"], ["host", "vim.HostSystem", "eam.version.version1", {:optional => true}], ["vm", "vim.VirtualMachine", "eam.version.version1", {:optional => true}], ["vmIp", "string", "eam.version.version1", {:optional => true}], ["vmName", "string", "eam.version.version1"], ["esxAgentResourcePool", "vim.ResourcePool", "eam.version.version1", {:optional => true}], ["esxAgentFolder", "vim.Folder", "eam.version.version1", {:optional => true}], ["installedBulletin", "string[]", "eam.version.version1", {:optional => true}], ["installedVibs", "eam.vib.VibInfo[]", "eam.version.version6", {:optional => true}], ["agency", "eam.Agency", "eam.version.version2", {:optional => true}]])
    create_data_type("eam.Agent.ConfigInfo", "AgentConfigInfo", "vmodl.DynamicData", "eam.version.version1", [["productLineId", "string", "eam.version.version1", {:optional => true}], ["hostVersion", "string", "eam.version.version1", {:optional => true}], ["ovfPackageUrl", "string", "eam.version.version1", {:optional => true}], ["ovfEnvironment", "eam.Agent.OvfEnvironmentInfo", "eam.version.version1", {:optional => true}], ["vibUrl", "string", "eam.version.version1", {:optional => true}], ["vibMatchingRules", "eam.Agent.VibMatchingRule[]", "eam.version.version2_5", {:optional => true}], ["vibName", "string", "eam.version.version2", {:optional => true}], ["dvFilterEnabled", "boolean", "eam.version.version1", {:optional => true}], ["rebootHostAfterVibUninstall", "boolean", "eam.version.version1", {:optional => true}], ["vmciService", "string[]", "eam.version.version1", {:optional => true}]])
    create_data_type("eam.Agent.OvfEnvironmentInfo", "AgentOvfEnvironmentInfo", "vmodl.DynamicData", "eam.version.version1", [["ovfProperty", "eam.Agent.OvfEnvironmentInfo.OvfProperty[]", "eam.version.version1", {:optional => true}]])
    create_data_type("eam.Agent.OvfEnvironmentInfo.OvfProperty", "AgentOvfEnvironmentInfoOvfProperty", "vmodl.DynamicData", "eam.version.version1", [["key", "string", "eam.version.version1"], ["value", "string", "eam.version.version1"]])
    create_data_type("eam.Agent.VibMatchingRule", "AgentVibMatchingRule", "vmodl.DynamicData", "eam.version.version1", [["vibNameRegex", "string", "eam.version.version1"], ["vibVersionRegex", "string", "eam.version.version1"]])
    create_data_type("eam.fault.EamAppFault", "EamAppFault", "eam.fault.EamRuntimeFault", "eam.version.version6", nil)
    create_data_type("eam.fault.EamIOFault", "EamIOFault", "eam.fault.EamRuntimeFault", "eam.version.version6", nil)
    create_data_type("eam.fault.InvalidAgentConfiguration", "InvalidAgentConfiguration", "eam.fault.EamFault", "eam.version.version1", [["invalidAgentConfiguration", "eam.Agent.ConfigInfo", "eam.version.version1", {:optional => true}], ["invalidField", "string", "eam.version.version1", {:optional => true}]])
    create_data_type("eam.issue.AgencyIssue", "AgencyIssue", "eam.issue.Issue", "eam.version.version1", [["agency", "eam.Agency", "eam.version.version1"], ["agencyName", "string", "eam.version.version1"], ["solutionId", "string", "eam.version.version1"], ["solutionName", "string", "eam.version.version1"]])
    create_data_type("eam.issue.AgentIssue", "AgentIssue", "eam.issue.AgencyIssue", "eam.version.version1", [["agent", "eam.Agent", "eam.version.version1"], ["agentName", "string", "eam.version.version1"], ["host", "vim.HostSystem", "eam.version.version1"], ["hostName", "string", "eam.version.version1"]])
    create_data_type("eam.issue.ExtensibleIssue", "ExtensibleIssue", "eam.issue.Issue", "eam.version.version2", [["typeId", "string", "eam.version.version2"], ["argument", "vmodl.KeyAnyValue[]", "eam.version.version2", {:optional => true}], ["target", "vim.ManagedEntity", "eam.version.version2", {:optional => true}], ["agent", "eam.Agent", "eam.version.version2", {:optional => true}], ["agency", "eam.Agency", "eam.version.version2", {:optional => true}]])
    create_data_type("eam.issue.HostIssue", "HostIssue", "eam.issue.Issue", "eam.version.version1", [["host", "vim.HostSystem", "eam.version.version1"]])
    create_data_type("eam.issue.MissingDvFilterSwitch", "MissingDvFilterSwitch", "eam.issue.AgentIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.OrphanedAgency", "OrphanedAgency", "eam.issue.AgencyIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.OrphanedDvFilterSwitch", "OrphanedDvFilterSwitch", "eam.issue.HostIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.UnknownAgentVm", "UnknownAgentVm", "eam.issue.HostIssue", "eam.version.version1", [["vm", "vim.VirtualMachine", "eam.version.version1"]])
    create_data_type("eam.issue.VibIssue", "VibIssue", "eam.issue.AgentIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.VibNotInstalled", "VibNotInstalled", "eam.issue.VibIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.VibRequiresHostInMaintenanceMode", "VibRequiresHostInMaintenanceMode", "eam.issue.VibIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.VibRequiresHostReboot", "VibRequiresHostReboot", "eam.issue.VibIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.VibRequiresManualInstallation", "VibRequiresManualInstallation", "eam.issue.VibIssue", "eam.version.version1", [["bulletin", "string[]", "eam.version.version1"]])
    create_data_type("eam.issue.VibRequiresManualUninstallation", "VibRequiresManualUninstallation", "eam.issue.VibIssue", "eam.version.version1", [["bulletin", "string[]", "eam.version.version1"]])
    create_data_type("eam.issue.VmIssue", "VmIssue", "eam.issue.AgentIssue", "eam.version.version1", [["vm", "vim.VirtualMachine", "eam.version.version1"]])
    create_data_type("eam.issue.VmMarkedAsTemplate", "VmMarkedAsTemplate", "eam.issue.VmIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.VmNotDeployed", "VmNotDeployed", "eam.issue.AgentIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.VmOrphaned", "VmOrphaned", "eam.issue.VmIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.VmPoweredOff", "VmPoweredOff", "eam.issue.VmIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.VmPoweredOn", "VmPoweredOn", "eam.issue.VmIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.VmSuspended", "VmSuspended", "eam.issue.VmIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.VmWrongFolder", "VmWrongFolder", "eam.issue.VmIssue", "eam.version.version1", [["currentFolder", "vim.Folder", "eam.version.version1"], ["requiredFolder", "vim.Folder", "eam.version.version1"]])
    create_data_type("eam.issue.VmWrongResourcePool", "VmWrongResourcePool", "eam.issue.VmIssue", "eam.version.version1", [["currentResourcePool", "vim.ResourcePool", "eam.version.version1"], ["requiredResourcePool", "vim.ResourcePool", "eam.version.version1"]])
    create_managed_type("eam.Agency", "Agency", "eam.EamObject", "eam.version.version1", [["solutionId", "string", "eam.version.version1", {}, nil], ["owner", "string", "eam.version.version6", {:optional => true}, nil], ["config", "eam.Agency.ConfigInfo", "eam.version.version1", {}, nil], ["runtime", "eam.EamObject.RuntimeInfo", "eam.version.version1", {}, nil], ["agent", "eam.Agent[]", "eam.version.version1", {:optional => true}, nil]], [["querySolutionId", "QuerySolutionId", "eam.version.version1", [], [{}, "string", "string"], nil, nil], ["queryConfig", "QueryConfig", "eam.version.version1", [], [{}, "eam.Agency.ConfigInfo", "eam.Agency.ConfigInfo"], nil, nil], ["update", "Update", "eam.version.version1", [["config", "eam.Agency.ConfigInfo", "eam.version.version1", {}, nil]], [{}, "void", "void"], nil, ["eam.fault.InvalidAgentConfiguration", "eam.fault.InvalidAgencyScope", "eam.fault.InvalidUrl"]], ["queryRuntime", "AgencyQueryRuntime", "eam.version.version1", [], [{}, "eam.EamObject.RuntimeInfo", "eam.EamObject.RuntimeInfo"], nil, nil], ["queryAgent", "QueryAgent", "eam.version.version1", [], [{:optional => true}, "eam.Agent[]", "eam.Agent[]"], nil, nil], ["registerAgentVm", "RegisterAgentVm", "eam.version.version2", [["agentVm", "vim.VirtualMachine", "eam.version.version2", {}, nil]], [{}, "eam.Agent", "eam.Agent"], nil, ["vmodl.fault.ManagedObjectNotFound"]], ["unregisterAgentVm", "UnregisterAgentVm", "eam.version.version2", [["agentVm", "vim.VirtualMachine", "eam.version.version2", {}, nil]], [{}, "void", "void"], nil, nil], ["enable", "Enable", "eam.version.version1", [], [{}, "void", "void"], nil, nil], ["disable", "Disable", "eam.version.version1", [], [{}, "void", "void"], nil, nil], ["uninstall", "Uninstall", "eam.version.version1", [], [{}, "void", "void"], nil, nil], ["destroyAgency", "DestroyAgency", "eam.version.version1", [], [{}, "void", "void"], nil, nil], ["addIssue", "AddIssue", "eam.version.version2", [["issue", "eam.issue.Issue", "eam.version.version2", {}, nil]], [{}, "eam.issue.Issue", "eam.issue.Issue"], nil, ["vmodl.fault.InvalidArgument"]]])
    create_data_type("eam.Agency.ConfigInfo", "AgencyConfigInfo", "vmodl.DynamicData", "eam.version.version1", [["agentConfig", "eam.Agent.ConfigInfo[]", "eam.version.version1", {:optional => true}], ["scope", "eam.Agency.Scope", "eam.version.version1", {:optional => true}], ["manuallyMarkAgentVmAvailableAfterProvisioning", "boolean", "eam.version.version1", {:optional => true}], ["manuallyMarkAgentVmAvailableAfterPowerOn", "boolean", "eam.version.version1", {:optional => true}], ["optimizedDeploymentEnabled", "boolean", "eam.version.version1", {:optional => true}], ["agentName", "string", "eam.version.version1", {:optional => true}], ["agencyName", "string", "eam.version.version1", {:optional => true}], ["manuallyProvisioned", "boolean", "eam.version.version2", {:optional => true}], ["manuallyMonitored", "boolean", "eam.version.version2", {:optional => true}], ["bypassVumEnabled", "boolean", "eam.version.version2", {:optional => true}], ["agentVmNetwork", "vim.Network[]", "eam.version.version2", {:optional => true}], ["agentVmDatastore", "vim.Datastore[]", "eam.version.version2_5", {:optional => true}], ["preferHostConfiguration", "boolean", "eam.version.version2_5", {:optional => true}], ["ipPool", "vim.vApp.IpPool", "eam.version.version3", {:optional => true}]])
    create_data_type("eam.Agency.Scope", "AgencyScope", "vmodl.DynamicData", "eam.version.version1", nil)
    create_data_type("eam.Agency.ComputeResourceScope", "AgencyComputeResourceScope", "eam.Agency.Scope", "eam.version.version1", [["computeResource", "vim.ComputeResource[]", "eam.version.version1", {:optional => true}]])
    create_managed_type("eam.EsxAgentManager", "EsxAgentManager", "eam.EamObject", "eam.version.version1", [["agency", "eam.Agency[]", "eam.version.version1", {:optional => true}, nil], ["issue", "eam.issue.Issue[]", "eam.version.version1", {:optional => true}, nil]], [["queryAgency", "QueryAgency", "eam.version.version1", [], [{:optional => true}, "eam.Agency[]", "eam.Agency[]"], nil, nil], ["createAgency", "CreateAgency", "eam.version.version1", [["agencyConfigInfo", "eam.Agency.ConfigInfo", "eam.version.version1", {}, nil], ["initialGoalState", "string", "eam.version.version1", {}, nil]], [{}, "eam.Agency", "eam.Agency"], nil, ["eam.fault.InvalidAgentConfiguration", "eam.fault.InvalidAgencyScope", "eam.fault.InvalidUrl"]], ["scanForUnknownAgentVm", "ScanForUnknownAgentVm", "eam.version.version1", [], [{}, "void", "void"], nil, nil]])
    create_data_type("eam.issue.CannotAccessAgentOVF", "CannotAccessAgentOVF", "eam.issue.VmNotDeployed", "eam.version.version1", [["downloadUrl", "string", "eam.version.version1"]])
    create_data_type("eam.issue.CannotAccessAgentVib", "CannotAccessAgentVib", "eam.issue.VibNotInstalled", "eam.version.version1", [["downloadUrl", "string", "eam.version.version1"]])
    create_data_type("eam.issue.IncompatibleHostVersion", "IncompatibleHostVersion", "eam.issue.VmNotDeployed", "eam.version.version1", nil)
    create_data_type("eam.issue.InsufficientIpAddresses", "InsufficientIpAddresses", "eam.issue.VmPoweredOff", "eam.version.version1", [["network", "vim.Network", "eam.version.version1"]])
    create_data_type("eam.issue.InsufficientResources", "InsufficientResources", "eam.issue.VmNotDeployed", "eam.version.version1", nil)
    create_data_type("eam.issue.InsufficientSpace", "InsufficientSpace", "eam.issue.VmNotDeployed", "eam.version.version1", nil)
    create_data_type("eam.issue.MissingAgentIpPool", "MissingAgentIpPool", "eam.issue.VmPoweredOff", "eam.version.version1", [["network", "vim.Network", "eam.version.version1"]])
    create_data_type("eam.issue.NoAgentVmDatastore", "NoAgentVmDatastore", "eam.issue.VmNotDeployed", "eam.version.version1", nil)
    create_data_type("eam.issue.NoAgentVmNetwork", "NoAgentVmNetwork", "eam.issue.VmNotDeployed", "eam.version.version1", nil)
    create_data_type("eam.issue.NoCustomAgentVmDatastore", "NoCustomAgentVmDatastore", "eam.issue.NoAgentVmDatastore", "eam.version.version1", [["customAgentVmDatastore", "vim.Datastore[]", "eam.version.version1"], ["customAgentVmDatastoreName", "string[]", "eam.version.version1"]])
    create_data_type("eam.issue.NoCustomAgentVmNetwork", "NoCustomAgentVmNetwork", "eam.issue.NoAgentVmNetwork", "eam.version.version1", [["customAgentVmNetwork", "vim.Network[]", "eam.version.version1"], ["customAgentVmNetworkName", "string[]", "eam.version.version1"]])
    create_data_type("eam.issue.OvfInvalidFormat", "OvfInvalidFormat", "eam.issue.VmNotDeployed", "eam.version.version1", [["error", "vmodl.MethodFault[]", "eam.version.version1", {:optional => true}]])
    create_data_type("eam.issue.OvfInvalidProperty", "OvfInvalidProperty", "eam.issue.VmIssue", "eam.version.version1", [["error", "vmodl.MethodFault[]", "eam.version.version1", {:optional => true}]])
    create_data_type("eam.issue.VibCannotPutHostInMaintenanceMode", "VibCannotPutHostInMaintenanceMode", "eam.issue.VibIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.VibInvalidFormat", "VibInvalidFormat", "eam.issue.VibNotInstalled", "eam.version.version1", nil)
    create_data_type("eam.issue.VmCorrupted", "VmCorrupted", "eam.issue.VmIssue", "eam.version.version1", [["missingFile", "string", "eam.version.version1", {:optional => true}]])
    create_data_type("eam.issue.VmDeployed", "VmDeployed", "eam.issue.VmIssue", "eam.version.version1", nil)
    create_data_type("eam.issue.HostInMaintenanceMode", "HostInMaintenanceMode", "eam.issue.VmDeployed", "eam.version.version1", nil)
    create_data_type("eam.issue.HostInStandbyMode", "HostInStandbyMode", "eam.issue.VmDeployed", "eam.version.version1", nil)
    create_data_type("eam.issue.HostPoweredOff", "HostPoweredOff", "eam.issue.VmDeployed", "eam.version.version1", nil)
  end
end

