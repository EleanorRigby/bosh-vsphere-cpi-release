# ******* WARNING - AUTO GENERATED CODE - DO NOT EDIT *******

module VimSdk
  module VmomiSupport

    add_version("vim.version.version10", "vim25", "6.0", false, "vim25")
    add_version("vim.version.version11", "vim25", "6.5", false, "vim25")
    add_version("vmodl.query.version.version1", "", "", false, "vim25")
    add_version("vmodl.query.version.version2", "", "", false, "vim25")
    add_version("vmodl.query.version.version3", "", "", false, "vim25")
    add_version("vmodl.query.version.version4", "", "", false, "vim25")
    add_version("vmodl.reflect.version.version2", "reflect", "2.0", false, "reflect")
    add_version("vmodl.reflect.version.version1", "reflect", "1.0", false, "reflect")
    add_version("pbm.version.version11", "pbm", "6.5", false, "pbm")
    add_version("vim.version.legacy", "vim25", "legacy", false, "vim25")
    add_version("pbm.version.version1", "pbm", "1.0", false, "pbm")
    add_version("pbm.version.version2", "pbm", "2.0", false, "pbm")
    add_version("vim.version.version1", "vim2", "2.0", false, "vim25")
    add_version("vim.version.version2", "vim25", "2.5", false, "vim25")
    add_version("vim.version.version3", "vim25", "2.5u2", false, "vim25")
    add_version("vim.version.version4", "vim25", "2.5u2server", false, "vim25")
    add_version("vim.version.version5", "vim25", "4.0", false, "vim25")
    add_version("vim.version.version6", "vim25", "4.1", false, "vim25")
    add_version("vim.version.version7", "vim25", "5.0", false, "vim25")
    add_version("vim.version.version8", "vim25", "5.1", false, "vim25")
    add_version("vim.version.version9", "vim25", "5.5", false, "vim25")
    add_version("pbm.version.legacy", "pbm", "legacy", false, "pbm")
    add_version("vmodl.version.version2", "", "", false, "vim25")
    add_version("vmodl.version.version1", "", "", false, "vim25")
    add_version("vmodl.version.version0", "", "", false, "vim25")
    add_version_parent("vim.version.version10", "vim.version.version10")
    add_version_parent("vim.version.version10", "vmodl.query.version.version1")
    add_version_parent("vim.version.version10", "vmodl.query.version.version2")
    add_version_parent("vim.version.version10", "vmodl.query.version.version3")
    add_version_parent("vim.version.version10", "vmodl.query.version.version4")
    add_version_parent("vim.version.version10", "vmodl.reflect.version.version2")
    add_version_parent("vim.version.version10", "vmodl.reflect.version.version1")
    add_version_parent("vim.version.version10", "vim.version.version1")
    add_version_parent("vim.version.version10", "vim.version.version2")
    add_version_parent("vim.version.version10", "vim.version.version3")
    add_version_parent("vim.version.version10", "vim.version.version4")
    add_version_parent("vim.version.version10", "vim.version.version5")
    add_version_parent("vim.version.version10", "vim.version.version6")
    add_version_parent("vim.version.version10", "vim.version.version7")
    add_version_parent("vim.version.version10", "vim.version.version8")
    add_version_parent("vim.version.version10", "vim.version.version9")
    add_version_parent("vim.version.version10", "vmodl.version.version2")
    add_version_parent("vim.version.version10", "vmodl.version.version1")
    add_version_parent("vim.version.version10", "vmodl.version.version0")
    add_version_parent("vim.version.version11", "vim.version.version10")
    add_version_parent("vim.version.version11", "vim.version.version11")
    add_version_parent("vim.version.version11", "vmodl.query.version.version1")
    add_version_parent("vim.version.version11", "vmodl.query.version.version2")
    add_version_parent("vim.version.version11", "vmodl.query.version.version3")
    add_version_parent("vim.version.version11", "vmodl.query.version.version4")
    add_version_parent("vim.version.version11", "vmodl.reflect.version.version2")
    add_version_parent("vim.version.version11", "vmodl.reflect.version.version1")
    add_version_parent("vim.version.version11", "vim.version.version1")
    add_version_parent("vim.version.version11", "vim.version.version2")
    add_version_parent("vim.version.version11", "vim.version.version3")
    add_version_parent("vim.version.version11", "vim.version.version4")
    add_version_parent("vim.version.version11", "vim.version.version5")
    add_version_parent("vim.version.version11", "vim.version.version6")
    add_version_parent("vim.version.version11", "vim.version.version7")
    add_version_parent("vim.version.version11", "vim.version.version8")
    add_version_parent("vim.version.version11", "vim.version.version9")
    add_version_parent("vim.version.version11", "vmodl.version.version2")
    add_version_parent("vim.version.version11", "vmodl.version.version1")
    add_version_parent("vim.version.version11", "vmodl.version.version0")
    add_version_parent("vmodl.query.version.version1", "vmodl.query.version.version1")
    add_version_parent("vmodl.query.version.version1", "vmodl.version.version0")
    add_version_parent("vmodl.query.version.version2", "vmodl.query.version.version1")
    add_version_parent("vmodl.query.version.version2", "vmodl.query.version.version2")
    add_version_parent("vmodl.query.version.version2", "vmodl.version.version1")
    add_version_parent("vmodl.query.version.version2", "vmodl.version.version0")
    add_version_parent("vmodl.query.version.version3", "vmodl.query.version.version1")
    add_version_parent("vmodl.query.version.version3", "vmodl.query.version.version2")
    add_version_parent("vmodl.query.version.version3", "vmodl.query.version.version3")
    add_version_parent("vmodl.query.version.version3", "vmodl.version.version1")
    add_version_parent("vmodl.query.version.version3", "vmodl.version.version0")
    add_version_parent("vmodl.query.version.version4", "vmodl.query.version.version1")
    add_version_parent("vmodl.query.version.version4", "vmodl.query.version.version2")
    add_version_parent("vmodl.query.version.version4", "vmodl.query.version.version3")
    add_version_parent("vmodl.query.version.version4", "vmodl.query.version.version4")
    add_version_parent("vmodl.query.version.version4", "vmodl.version.version2")
    add_version_parent("vmodl.query.version.version4", "vmodl.version.version1")
    add_version_parent("vmodl.query.version.version4", "vmodl.version.version0")
    add_version_parent("vmodl.reflect.version.version2", "vmodl.reflect.version.version2")
    add_version_parent("vmodl.reflect.version.version2", "vmodl.reflect.version.version1")
    add_version_parent("vmodl.reflect.version.version2", "vmodl.version.version2")
    add_version_parent("vmodl.reflect.version.version2", "vmodl.version.version1")
    add_version_parent("vmodl.reflect.version.version2", "vmodl.version.version0")
    add_version_parent("vmodl.reflect.version.version1", "vmodl.reflect.version.version1")
    add_version_parent("vmodl.reflect.version.version1", "vmodl.version.version2")
    add_version_parent("vmodl.reflect.version.version1", "vmodl.version.version1")
    add_version_parent("vmodl.reflect.version.version1", "vmodl.version.version0")
    add_version_parent("pbm.version.version11", "vim.version.version10")
    add_version_parent("pbm.version.version11", "vim.version.version11")
    add_version_parent("pbm.version.version11", "vmodl.query.version.version1")
    add_version_parent("pbm.version.version11", "vmodl.query.version.version2")
    add_version_parent("pbm.version.version11", "vmodl.query.version.version3")
    add_version_parent("pbm.version.version11", "vmodl.query.version.version4")
    add_version_parent("pbm.version.version11", "vmodl.reflect.version.version2")
    add_version_parent("pbm.version.version11", "vmodl.reflect.version.version1")
    add_version_parent("pbm.version.version11", "pbm.version.version11")
    add_version_parent("pbm.version.version11", "pbm.version.version1")
    add_version_parent("pbm.version.version11", "pbm.version.version2")
    add_version_parent("pbm.version.version11", "vim.version.version1")
    add_version_parent("pbm.version.version11", "vim.version.version2")
    add_version_parent("pbm.version.version11", "vim.version.version3")
    add_version_parent("pbm.version.version11", "vim.version.version4")
    add_version_parent("pbm.version.version11", "vim.version.version5")
    add_version_parent("pbm.version.version11", "vim.version.version6")
    add_version_parent("pbm.version.version11", "vim.version.version7")
    add_version_parent("pbm.version.version11", "vim.version.version8")
    add_version_parent("pbm.version.version11", "vim.version.version9")
    add_version_parent("pbm.version.version11", "vmodl.version.version2")
    add_version_parent("pbm.version.version11", "vmodl.version.version1")
    add_version_parent("pbm.version.version11", "vmodl.version.version0")
    add_version_parent("vim.version.legacy", "vim.version.version10")
    add_version_parent("vim.version.legacy", "vim.version.version11")
    add_version_parent("vim.version.legacy", "vmodl.query.version.version1")
    add_version_parent("vim.version.legacy", "vmodl.query.version.version2")
    add_version_parent("vim.version.legacy", "vmodl.query.version.version3")
    add_version_parent("vim.version.legacy", "vmodl.query.version.version4")
    add_version_parent("vim.version.legacy", "vmodl.reflect.version.version2")
    add_version_parent("vim.version.legacy", "vmodl.reflect.version.version1")
    add_version_parent("vim.version.legacy", "vim.version.legacy")
    add_version_parent("vim.version.legacy", "vim.version.version1")
    add_version_parent("vim.version.legacy", "vim.version.version2")
    add_version_parent("vim.version.legacy", "vim.version.version3")
    add_version_parent("vim.version.legacy", "vim.version.version4")
    add_version_parent("vim.version.legacy", "vim.version.version5")
    add_version_parent("vim.version.legacy", "vim.version.version6")
    add_version_parent("vim.version.legacy", "vim.version.version7")
    add_version_parent("vim.version.legacy", "vim.version.version8")
    add_version_parent("vim.version.legacy", "vim.version.version9")
    add_version_parent("vim.version.legacy", "vmodl.version.version2")
    add_version_parent("vim.version.legacy", "vmodl.version.version1")
    add_version_parent("vim.version.legacy", "vmodl.version.version0")
    add_version_parent("pbm.version.version1", "pbm.version.version1")
    add_version_parent("pbm.version.version1", "vmodl.version.version2")
    add_version_parent("pbm.version.version1", "vmodl.version.version1")
    add_version_parent("pbm.version.version1", "vmodl.version.version0")
    add_version_parent("pbm.version.version2", "pbm.version.version1")
    add_version_parent("pbm.version.version2", "pbm.version.version2")
    add_version_parent("pbm.version.version2", "vmodl.version.version2")
    add_version_parent("pbm.version.version2", "vmodl.version.version1")
    add_version_parent("pbm.version.version2", "vmodl.version.version0")
    add_version_parent("vim.version.version1", "vmodl.query.version.version1")
    add_version_parent("vim.version.version1", "vim.version.version1")
    add_version_parent("vim.version.version1", "vmodl.version.version0")
    add_version_parent("vim.version.version2", "vmodl.query.version.version1")
    add_version_parent("vim.version.version2", "vim.version.version1")
    add_version_parent("vim.version.version2", "vim.version.version2")
    add_version_parent("vim.version.version2", "vmodl.version.version0")
    add_version_parent("vim.version.version3", "vmodl.query.version.version1")
    add_version_parent("vim.version.version3", "vim.version.version1")
    add_version_parent("vim.version.version3", "vim.version.version2")
    add_version_parent("vim.version.version3", "vim.version.version3")
    add_version_parent("vim.version.version3", "vmodl.version.version0")
    add_version_parent("vim.version.version4", "vmodl.query.version.version1")
    add_version_parent("vim.version.version4", "vim.version.version1")
    add_version_parent("vim.version.version4", "vim.version.version2")
    add_version_parent("vim.version.version4", "vim.version.version3")
    add_version_parent("vim.version.version4", "vim.version.version4")
    add_version_parent("vim.version.version4", "vmodl.version.version0")
    add_version_parent("vim.version.version5", "vmodl.query.version.version1")
    add_version_parent("vim.version.version5", "vmodl.query.version.version2")
    add_version_parent("vim.version.version5", "vim.version.version1")
    add_version_parent("vim.version.version5", "vim.version.version2")
    add_version_parent("vim.version.version5", "vim.version.version3")
    add_version_parent("vim.version.version5", "vim.version.version4")
    add_version_parent("vim.version.version5", "vim.version.version5")
    add_version_parent("vim.version.version5", "vmodl.version.version1")
    add_version_parent("vim.version.version5", "vmodl.version.version0")
    add_version_parent("vim.version.version6", "vmodl.query.version.version1")
    add_version_parent("vim.version.version6", "vmodl.query.version.version2")
    add_version_parent("vim.version.version6", "vmodl.query.version.version3")
    add_version_parent("vim.version.version6", "vim.version.version1")
    add_version_parent("vim.version.version6", "vim.version.version2")
    add_version_parent("vim.version.version6", "vim.version.version3")
    add_version_parent("vim.version.version6", "vim.version.version4")
    add_version_parent("vim.version.version6", "vim.version.version5")
    add_version_parent("vim.version.version6", "vim.version.version6")
    add_version_parent("vim.version.version6", "vmodl.version.version1")
    add_version_parent("vim.version.version6", "vmodl.version.version0")
    add_version_parent("vim.version.version7", "vmodl.query.version.version1")
    add_version_parent("vim.version.version7", "vmodl.query.version.version2")
    add_version_parent("vim.version.version7", "vmodl.query.version.version3")
    add_version_parent("vim.version.version7", "vmodl.query.version.version4")
    add_version_parent("vim.version.version7", "vmodl.reflect.version.version1")
    add_version_parent("vim.version.version7", "vim.version.version1")
    add_version_parent("vim.version.version7", "vim.version.version2")
    add_version_parent("vim.version.version7", "vim.version.version3")
    add_version_parent("vim.version.version7", "vim.version.version4")
    add_version_parent("vim.version.version7", "vim.version.version5")
    add_version_parent("vim.version.version7", "vim.version.version6")
    add_version_parent("vim.version.version7", "vim.version.version7")
    add_version_parent("vim.version.version7", "vmodl.version.version2")
    add_version_parent("vim.version.version7", "vmodl.version.version1")
    add_version_parent("vim.version.version7", "vmodl.version.version0")
    add_version_parent("vim.version.version8", "vmodl.query.version.version1")
    add_version_parent("vim.version.version8", "vmodl.query.version.version2")
    add_version_parent("vim.version.version8", "vmodl.query.version.version3")
    add_version_parent("vim.version.version8", "vmodl.query.version.version4")
    add_version_parent("vim.version.version8", "vmodl.reflect.version.version1")
    add_version_parent("vim.version.version8", "vim.version.version1")
    add_version_parent("vim.version.version8", "vim.version.version2")
    add_version_parent("vim.version.version8", "vim.version.version3")
    add_version_parent("vim.version.version8", "vim.version.version4")
    add_version_parent("vim.version.version8", "vim.version.version5")
    add_version_parent("vim.version.version8", "vim.version.version6")
    add_version_parent("vim.version.version8", "vim.version.version7")
    add_version_parent("vim.version.version8", "vim.version.version8")
    add_version_parent("vim.version.version8", "vmodl.version.version2")
    add_version_parent("vim.version.version8", "vmodl.version.version1")
    add_version_parent("vim.version.version8", "vmodl.version.version0")
    add_version_parent("vim.version.version9", "vmodl.query.version.version1")
    add_version_parent("vim.version.version9", "vmodl.query.version.version2")
    add_version_parent("vim.version.version9", "vmodl.query.version.version3")
    add_version_parent("vim.version.version9", "vmodl.query.version.version4")
    add_version_parent("vim.version.version9", "vmodl.reflect.version.version1")
    add_version_parent("vim.version.version9", "vim.version.version1")
    add_version_parent("vim.version.version9", "vim.version.version2")
    add_version_parent("vim.version.version9", "vim.version.version3")
    add_version_parent("vim.version.version9", "vim.version.version4")
    add_version_parent("vim.version.version9", "vim.version.version5")
    add_version_parent("vim.version.version9", "vim.version.version6")
    add_version_parent("vim.version.version9", "vim.version.version7")
    add_version_parent("vim.version.version9", "vim.version.version8")
    add_version_parent("vim.version.version9", "vim.version.version9")
    add_version_parent("vim.version.version9", "vmodl.version.version2")
    add_version_parent("vim.version.version9", "vmodl.version.version1")
    add_version_parent("vim.version.version9", "vmodl.version.version0")
    add_version_parent("pbm.version.legacy", "vim.version.version10")
    add_version_parent("pbm.version.legacy", "vim.version.version11")
    add_version_parent("pbm.version.legacy", "vmodl.query.version.version1")
    add_version_parent("pbm.version.legacy", "vmodl.query.version.version2")
    add_version_parent("pbm.version.legacy", "vmodl.query.version.version3")
    add_version_parent("pbm.version.legacy", "vmodl.query.version.version4")
    add_version_parent("pbm.version.legacy", "vmodl.reflect.version.version2")
    add_version_parent("pbm.version.legacy", "vmodl.reflect.version.version1")
    add_version_parent("pbm.version.legacy", "pbm.version.version11")
    add_version_parent("pbm.version.legacy", "vim.version.legacy")
    add_version_parent("pbm.version.legacy", "pbm.version.version1")
    add_version_parent("pbm.version.legacy", "pbm.version.version2")
    add_version_parent("pbm.version.legacy", "vim.version.version1")
    add_version_parent("pbm.version.legacy", "vim.version.version2")
    add_version_parent("pbm.version.legacy", "vim.version.version3")
    add_version_parent("pbm.version.legacy", "vim.version.version4")
    add_version_parent("pbm.version.legacy", "vim.version.version5")
    add_version_parent("pbm.version.legacy", "vim.version.version6")
    add_version_parent("pbm.version.legacy", "vim.version.version7")
    add_version_parent("pbm.version.legacy", "vim.version.version8")
    add_version_parent("pbm.version.legacy", "vim.version.version9")
    add_version_parent("pbm.version.legacy", "pbm.version.legacy")
    add_version_parent("pbm.version.legacy", "vmodl.version.version2")
    add_version_parent("pbm.version.legacy", "vmodl.version.version1")
    add_version_parent("pbm.version.legacy", "vmodl.version.version0")
    add_version_parent("vmodl.version.version2", "vmodl.version.version2")
    add_version_parent("vmodl.version.version2", "vmodl.version.version1")
    add_version_parent("vmodl.version.version2", "vmodl.version.version0")
    add_version_parent("vmodl.version.version1", "vmodl.version.version1")
    add_version_parent("vmodl.version.version1", "vmodl.version.version0")
    add_version_parent("vmodl.version.version0", "vmodl.version.version0")
    newestVersions.add("pbm.version.version11")
    stableVersions.add("pbm.version.version11")
    publicVersions.add("pbm.version.version11")
    oldestVersions.add("pbm.version.version1")
    create_data_type("pbm.AboutInfo", "PbmAboutInfo", "vmodl.DynamicData", "pbm.version.version1", [["name", "string", "pbm.version.version1"], ["version", "string", "pbm.version.version1"], ["instanceUuid", "string", "pbm.version.version1"]])
    create_data_type("pbm.ExtendedElementDescription", "PbmExtendedElementDescription", "vmodl.DynamicData", "pbm.version.version1", [["label", "string", "pbm.version.version1"], ["summary", "string", "pbm.version.version1"], ["key", "string", "pbm.version.version1"], ["messageCatalogKeyPrefix", "string", "pbm.version.version1"], ["messageArg", "vmodl.KeyAnyValue[]", "pbm.version.version1", {:optional => true}]])
    create_managed_type("pbm.PbmDebugManager", "PbmDebugManager", "vmodl.ManagedObject", "pbm.version.version1", nil, [["addTag", "PbmAddTag", "pbm.version.version1", [["tag", "string", "pbm.version.version1", {}, nil], ["tagCategory", "string", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["attachTagToDatastore", "PbmAttachTagToDatastore", "pbm.version.version1", [["tagName", "string", "pbm.version.version1", {}, nil], ["tagCategory", "string", "pbm.version.version1", {}, nil], ["datastoreMoId", "string", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["detachTagFromDatastore", "PbmDetachTagFromDatastore", "pbm.version.version1", [["tagName", "string", "pbm.version.version1", {}, nil], ["tagCategory", "string", "pbm.version.version1", {}, nil], ["datastoreMoId", "string", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["addTagCategory", "PbmAddTagCategory", "pbm.version.version1", [["categoryName", "string", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["deleteTag", "PbmDeleteTag", "pbm.version.version1", [["tagName", "string[]", "pbm.version.version1", {}, nil], ["tagCategory", "string", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["deleteCategory", "PbmDeleteCategory", "pbm.version.version1", [["category", "string", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.View", ["pbm.fault.PBMFault"]]])
    create_data_type("pbm.ResourceAssociation", "PbmResourceAssociation", "vmodl.DynamicData", "pbm.version.version1", [["profileId", "string", "pbm.version.version1"], ["resourceId", "string", "pbm.version.version1"]])
    create_data_type("pbm.ServerObjectRef", "PbmServerObjectRef", "vmodl.DynamicData", "pbm.version.version1", [["objectType", "string", "pbm.version.version1"], ["key", "string", "pbm.version.version1"], ["serverUuid", "string", "pbm.version.version1", {:optional => true}]])
    create_enum_type("pbm.ServerObjectRef.VvolType", "PbmVvolType", "pbm.version.version1", ["Config", "Data", "Swap"])
    create_enum_type("pbm.ServerObjectRef.ObjectType", "PbmObjectType", "pbm.version.version1", ["virtualMachine", "virtualMachineAndDisks", "virtualDiskId", "virtualDiskUUID", "datastore", "host", "cluster", "unknown"])
    create_managed_type("pbm.ServiceInstance", "PbmServiceInstance", "vmodl.ManagedObject", "pbm.version.version1", [["content", "pbm.ServiceInstanceContent", "pbm.version.version1", {}, "System.Anonymous"]], [["retrieveContent", "PbmRetrieveServiceContent", "pbm.version.version1", [], [{}, "pbm.ServiceInstanceContent", "pbm.ServiceInstanceContent"], "System.Anonymous", nil], ["queryAtomFeedQsProviderIds", "PbmQueryAtomFeedQsProviderIds", "pbm.version.version1", [["providerType", "string", "pbm.version.version1", {}, nil]], [{:optional => true}, "string[]", "string[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["getPbmDebugManager", "PbmDebugManager", "pbm.version.version1", [], [{:optional => true}, "pbm.PbmDebugManager", "pbm.PbmDebugManager"], "StorageProfile.View", nil]])
    create_data_type("pbm.ServiceInstanceContent", "PbmServiceInstanceContent", "vmodl.DynamicData", "pbm.version.version1", [["aboutInfo", "pbm.AboutInfo", "pbm.version.version1"], ["sessionManager", "pbm.auth.SessionManager", "pbm.version.version1"], ["capabilityMetadataManager", "pbm.capability.CapabilityMetadataManager", "pbm.version.version1"], ["profileManager", "pbm.profile.ProfileManager", "pbm.version.version1"], ["complianceManager", "pbm.compliance.ComplianceManager", "pbm.version.version1"], ["placementSolver", "pbm.placement.PlacementSolver", "pbm.version.version1"], ["replicationManager", "pbm.replication.ReplicationManager", "pbm.version.version11", {:optional => true}]])
    create_managed_type("pbm.Task", "PbmTask", "vmodl.ManagedObject", "pbm.version.version1", nil, nil)
    create_data_type("pbm.association.AssociationMetadata", "PbmAssociationMetadata", "vmodl.DynamicData", "pbm.version.version1", [["associableEntityType", "string", "pbm.version.version1"], ["associableProfileType", "string", "pbm.version.version1"]])
    create_managed_type("pbm.association.AssociationProviderRegistry", "PbmAssociationProviderRegistry", "vmodl.ManagedObject", "pbm.version.version1", nil, [["registerAssociationProvider", "PbmRegisterAssociationProvider", "pbm.version.version1", [["providerInfo", "pbm.association.provider.AssociationProviderInfo", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["pbm.fault.PBMFault"]], ["unregisterAssociationProvider", "PbmUnregisterAssociationProvider", "pbm.version.version1", [["uniqueId", "string", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["pbm.fault.NotFound", "pbm.fault.PBMFault"]]])
    create_managed_type("pbm.auth.SessionManager", "PbmSessionManager", "vmodl.ManagedObject", "pbm.version.version1", nil, [["loginByToken", "PbmLoginByToken", "pbm.version.version2", [["delegatedTokenXml", "string", "pbm.version.version2", {}, nil]], [{}, "void", "void"], "System.Anonymous", ["pbm.fault.InvalidLogin"]], ["logout", "PbmLogout", "pbm.version.version1", [], [{}, "void", "void"], "StorageProfile.View", nil]])
    create_data_type("pbm.capability.CapabilityMetadata", "PbmCapabilityMetadata", "vmodl.DynamicData", "pbm.version.version1", [["id", "pbm.capability.CapabilityMetadata.UniqueId", "pbm.version.version1"], ["summary", "pbm.ExtendedElementDescription", "pbm.version.version1"], ["mandatory", "boolean", "pbm.version.version1", {:optional => true}], ["hint", "boolean", "pbm.version.version1", {:optional => true}], ["keyId", "string", "pbm.version.version1", {:optional => true}], ["allowMultipleConstraints", "boolean", "pbm.version.version1", {:optional => true}], ["propertyMetadata", "pbm.capability.PropertyMetadata[]", "pbm.version.version1"]])
    create_data_type("pbm.capability.CapabilityMetadata.UniqueId", "PbmCapabilityMetadataUniqueId", "vmodl.DynamicData", "pbm.version.version1", [["namespace", "string", "pbm.version.version1"], ["id", "string", "pbm.version.version1"]])
    create_managed_type("pbm.capability.CapabilityMetadataManager", "PbmCapabilityMetadataManager", "vmodl.ManagedObject", "pbm.version.version1", nil, [["registerCapabilityMetadata", "PbmRegisterCapabilityMetadata", "pbm.version.version1", [["info", "pbm.capability.provider.CapabilityProviderInfo", "pbm.version.version1", {}, nil], ["capabilityMetadata", "pbm.capability.provider.CapabilityObjectMetadataInfo", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["vmodl.fault.InvalidArgument"]], ["unregisterCapabilityMetadata", "PbmUnregisterCapabilityMetadata", "pbm.version.version1", [["info", "pbm.capability.provider.CapabilityProviderInfo", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["pbm.fault.NotFound"]], ["queryAtomFeedQsProviderIds", "PbmQueryCapabilityMetadataQsProviderIds", "pbm.version.version1", [], [{:optional => true}, "string[]", "string[]"], "StorageProfile.View", nil], ["removeAllCapabilityMetadataDocuments", "removeAllCapabilityMetadataDocuments", "pbm.version.version1", [], [{}, "boolean", "boolean"], "StorageProfile.Update", nil]])
    create_data_type("pbm.capability.ConstraintInstance", "PbmCapabilityConstraintInstance", "vmodl.DynamicData", "pbm.version.version1", [["propertyInstance", "pbm.capability.PropertyInstance[]", "pbm.version.version1"]])
    create_enum_type("pbm.capability.Operator", "PbmCapabilityOperator", "pbm.version.version11", ["NOT"])
    create_data_type("pbm.capability.PropertyInstance", "PbmCapabilityPropertyInstance", "vmodl.DynamicData", "pbm.version.version1", [["id", "string", "pbm.version.version1"], ["operator", "string", "pbm.version.version11", {:optional => true}], ["value", "anyType", "pbm.version.version1"]])
    create_data_type("pbm.capability.PropertyMetadata", "PbmCapabilityPropertyMetadata", "vmodl.DynamicData", "pbm.version.version1", [["id", "string", "pbm.version.version1"], ["summary", "pbm.ExtendedElementDescription", "pbm.version.version1"], ["mandatory", "boolean", "pbm.version.version1"], ["type", "pbm.capability.TypeInfo", "pbm.version.version1", {:optional => true}], ["defaultValue", "anyType", "pbm.version.version1", {:optional => true}], ["allowedValue", "anyType", "pbm.version.version1", {:optional => true}], ["requirementsTypeHint", "string", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.capability.TypeInfo", "PbmCapabilityTypeInfo", "vmodl.DynamicData", "pbm.version.version1", [["typeName", "string", "pbm.version.version1"]])
    create_data_type("pbm.capability.provider.CapabilityObjectMetadataInfo", "PbmCapabilityMetadataInfo", "vmodl.DynamicData", "pbm.version.version1", [["resourceType", "string", "pbm.version.version1"], ["capabilitySchema", "pbm.capability.provider.CapabilityObjectSchema[]", "pbm.version.version1"]])
    create_data_type("pbm.capability.provider.CapabilityObjectMetadataPerCategory", "PbmCapabilityMetadataPerCategory", "vmodl.DynamicData", "pbm.version.version1", [["subCategory", "string", "pbm.version.version1"], ["capabilityMetadata", "pbm.capability.CapabilityMetadata[]", "pbm.version.version1"]])
    create_data_type("pbm.capability.provider.CapabilityObjectSchema", "PbmCapabilitySchema", "vmodl.DynamicData", "pbm.version.version1", [["vendorInfo", "pbm.capability.provider.CapabilityObjectSchema.VendorInfo", "pbm.version.version1"], ["namespaceInfo", "pbm.capability.provider.CapabilityObjectSchema.NamespaceInfo", "pbm.version.version1"], ["lineOfService", "pbm.capability.provider.LineOfServiceInfo", "pbm.version.version11", {:optional => true}], ["capabilityMetadataPerCategory", "pbm.capability.provider.CapabilityObjectMetadataPerCategory[]", "pbm.version.version1"]])
    create_data_type("pbm.capability.provider.CapabilityObjectSchema.VendorInfo", "PbmCapabilitySchemaVendorInfo", "vmodl.DynamicData", "pbm.version.version1", [["vendorUuid", "string", "pbm.version.version1"], ["info", "pbm.ExtendedElementDescription", "pbm.version.version1"]])
    create_data_type("pbm.capability.provider.CapabilityObjectSchema.NamespaceInfo", "PbmCapabilityNamespaceInfo", "vmodl.DynamicData", "pbm.version.version1", [["version", "string", "pbm.version.version1"], ["namespace", "string", "pbm.version.version1"], ["info", "pbm.ExtendedElementDescription", "pbm.version.version11", {:optional => true}]])
    create_data_type("pbm.capability.provider.CapabilityObjectSchema.VendorResourceTypeInfo", "PbmCapabilityVendorResourceTypeInfo", "vmodl.DynamicData", "pbm.version.version1", [["resourceType", "string", "pbm.version.version1"], ["vendorNamespaceInfo", "pbm.capability.provider.CapabilityObjectSchema.VendorNamespaceInfo[]", "pbm.version.version1"]])
    create_data_type("pbm.capability.provider.CapabilityObjectSchema.VendorNamespaceInfo", "PbmCapabilityVendorNamespaceInfo", "vmodl.DynamicData", "pbm.version.version1", [["vendorInfo", "pbm.capability.provider.CapabilityObjectSchema.VendorInfo", "pbm.version.version1"], ["namespaceInfo", "pbm.capability.provider.CapabilityObjectSchema.NamespaceInfo", "pbm.version.version1"]])
    create_data_type("pbm.capability.provider.CapabilityProviderInfo", "PbmCapabilityProviderInfo", "vmodl.DynamicData", "pbm.version.version1", [["providerUuid", "string", "pbm.version.version1"], ["schemaId", "string", "pbm.version.version1"]])
    create_data_type("pbm.capability.provider.LineOfServiceInfo", "PbmLineOfServiceInfo", "vmodl.DynamicData", "pbm.version.version11", [["lineOfService", "string", "pbm.version.version11"], ["name", "pbm.ExtendedElementDescription", "pbm.version.version11"], ["description", "pbm.ExtendedElementDescription", "pbm.version.version11", {:optional => true}]])
    create_enum_type("pbm.capability.provider.LineOfServiceInfo.LineOfServiceEnum", "PbmLineOfServiceInfoLineOfServiceEnum", "pbm.version.version11", ["INSPECTION", "COMPRESSION", "ENCRYPTION", "REPLICATION", "CACHING", "PERSISTENCE", "DATA_PROVIDER", "DATASTORE_IO_CONTROL"])
    create_data_type("pbm.capability.provider.PersistenceBasedDataServiceInfo", "PbmPersistenceBasedDataServiceInfo", "pbm.capability.provider.LineOfServiceInfo", "pbm.version.version11", [["compatiblePersistenceSchemaNamespace", "string[]", "pbm.version.version11", {:optional => true}]])
    create_data_type("pbm.capability.provider.VaioDataServiceInfo", "PbmVaioDataServiceInfo", "pbm.capability.provider.LineOfServiceInfo", "pbm.version.version11", [])
    create_enum_type("pbm.capability.types.BuiltinGenericTypesEnum", "PbmBuiltinGenericType", "pbm.version.version1", ["VMW_RANGE", "VMW_SET"])
    create_enum_type("pbm.capability.types.BuiltinTypesEnum", "PbmBuiltinType", "pbm.version.version1", ["XSD_LONG", "XSD_SHORT", "XSD_INTEGER", "XSD_INT", "XSD_STRING", "XSD_BOOLEAN", "XSD_DOUBLE", "XSD_DATETIME", "VMW_TIMESPAN", "VMW_POLICY"])
    create_data_type("pbm.capability.types.DescriptiveValue", "PbmCapabilityDescription", "vmodl.DynamicData", "pbm.version.version1", [["description", "pbm.ExtendedElementDescription", "pbm.version.version1"], ["value", "anyType", "pbm.version.version1"]])
    create_data_type("pbm.capability.types.DiscreteSet", "PbmCapabilityDiscreteSet", "vmodl.DynamicData", "pbm.version.version1", [["values", "anyType[]", "pbm.version.version1"]])
    create_data_type("pbm.capability.types.Range", "PbmCapabilityRange", "vmodl.DynamicData", "pbm.version.version1", [["min", "anyType", "pbm.version.version1"], ["max", "anyType", "pbm.version.version1"]])
    create_data_type("pbm.capability.types.TimeSpan", "PbmCapabilityTimeSpan", "vmodl.DynamicData", "pbm.version.version1", [["value", "int", "pbm.version.version1"], ["unit", "string", "pbm.version.version1"]])
    create_enum_type("pbm.capability.types.TimeUnitEnum", "PbmCapabilityTimeUnitType", "pbm.version.version1", ["SECONDS", "MINUTES", "HOURS", "DAYS", "WEEKS", "MONTHS", "YEARS"])
    create_managed_type("pbm.compliance.ComplianceManager", "PbmComplianceManager", "vmodl.ManagedObject", "pbm.version.version1", nil, [["checkCompliance", "PbmCheckCompliance", "pbm.version.version1", [["entities", "pbm.ServerObjectRef[]", "pbm.version.version1", {}, nil], ["profile", "pbm.profile.ProfileId", "pbm.version.version1", {:optional => true}, nil]], [{:optional => true}, "pbm.compliance.ComplianceResult[]", "pbm.compliance.ComplianceResult[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["fetchComplianceResult", "PbmFetchComplianceResult", "pbm.version.version1", [["entities", "pbm.ServerObjectRef[]", "pbm.version.version1", {}, nil], ["profile", "pbm.profile.ProfileId", "pbm.version.version1", {:optional => true}, nil]], [{:optional => true}, "pbm.compliance.ComplianceResult[]", "pbm.compliance.ComplianceResult[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["checkRollupCompliance", "PbmCheckRollupCompliance", "pbm.version.version1", [["entity", "pbm.ServerObjectRef[]", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.compliance.RollupComplianceResult[]", "pbm.compliance.RollupComplianceResult[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["fetchRollupComplianceResult", "PbmFetchRollupComplianceResult", "pbm.version.version1", [["entity", "pbm.ServerObjectRef[]", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.compliance.RollupComplianceResult[]", "pbm.compliance.RollupComplianceResult[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["queryAtomFeedQsProviderIds", "PbmQueryComplianceQsProviderIds", "pbm.version.version1", [], [{:optional => true}, "string[]", "string[]"], "StorageProfile.View", nil], ["queryByRollupComplianceStatus", "PbmQueryByRollupComplianceStatus", "pbm.version.version11", [["status", "string", "pbm.version.version11", {}, nil]], [{:optional => true}, "pbm.ServerObjectRef[]", "pbm.ServerObjectRef[]"], "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault"]], ["queryOutOfDateEntities", "PbmQueryOutOfDateEntities", "pbm.version.version11", [], [{:optional => true}, "pbm.ServerObjectRef[]", "pbm.ServerObjectRef[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]]])
    create_managed_type("pbm.compliance.ComplianceProviderRegistry", "PbmComplianceProviderRegistry", "vmodl.ManagedObject", "pbm.version.version1", nil, [["registerComplianceProvider", "PbmRegisterComplianceProvider", "pbm.version.version1", [["providerInfo", "pbm.compliance.provider.ComplianceProviderInfo", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["pbm.fault.PBMFault"]], ["unregisterComplianceProvider", "PbmUnregisterComplianceProvider", "pbm.version.version1", [["uniqueId", "string", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["pbm.fault.NotFound", "pbm.fault.PBMFault"]]])
    create_data_type("pbm.compliance.ComplianceResult", "PbmComplianceResult", "vmodl.DynamicData", "pbm.version.version1", [["checkTime", "vmodl.DateTime", "pbm.version.version1"], ["entity", "pbm.ServerObjectRef", "pbm.version.version1"], ["profile", "pbm.profile.ProfileId", "pbm.version.version1", {:optional => true}], ["complianceTaskStatus", "string", "pbm.version.version11", {:optional => true}], ["complianceStatus", "string", "pbm.version.version1"], ["mismatch", "boolean", "pbm.version.version1"], ["violatedPolicies", "pbm.compliance.PolicyStatus[]", "pbm.version.version1", {:optional => true}], ["errorCause", "vmodl.MethodFault[]", "pbm.version.version11", {:optional => true}], ["operationalStatus", "pbm.compliance.OperationalStatus", "pbm.version.version1", {:optional => true}], ["info", "pbm.ExtendedElementDescription", "pbm.version.version11", {:optional => true}]])
    create_enum_type("pbm.compliance.ComplianceResult.ComplianceStatus", "PbmComplianceStatus", "pbm.version.version1", ["compliant", "nonCompliant", "unknown", "notApplicable", "outOfDate"])
    create_enum_type("pbm.compliance.ComplianceResult.ComplianceTaskStatus", "PbmComplianceResultComplianceTaskStatus", "pbm.version.version11", ["inProgress", "success", "failed"])
    create_data_type("pbm.compliance.OperationalStatus", "PbmComplianceOperationalStatus", "vmodl.DynamicData", "pbm.version.version1", [["healthy", "boolean", "pbm.version.version1", {:optional => true}], ["operationETA", "vmodl.DateTime", "pbm.version.version1", {:optional => true}], ["operationProgress", "long", "pbm.version.version1", {:optional => true}], ["transitional", "boolean", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.compliance.PolicyStatus", "PbmCompliancePolicyStatus", "vmodl.DynamicData", "pbm.version.version1", [["expectedValue", "pbm.capability.CapabilityInstance", "pbm.version.version1"], ["currentValue", "pbm.capability.CapabilityInstance", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.compliance.RollupComplianceResult", "PbmRollupComplianceResult", "vmodl.DynamicData", "pbm.version.version1", [["oldestCheckTime", "vmodl.DateTime", "pbm.version.version1"], ["entity", "pbm.ServerObjectRef", "pbm.version.version1"], ["overallComplianceStatus", "string", "pbm.version.version1"], ["overallComplianceTaskStatus", "string", "pbm.version.version11", {:optional => true}], ["result", "pbm.compliance.ComplianceResult[]", "pbm.version.version1", {:optional => true}], ["errorCause", "vmodl.MethodFault[]", "pbm.version.version11", {:optional => true}], ["profileMismatch", "boolean", "pbm.version.version1"]])
    create_data_type("pbm.fault.PBMFault", "PbmFault", "vmodl.MethodFault", "pbm.version.version1", nil)
    create_data_type("pbm.fault.ProfileStorageFault", "PbmFaultProfileStorageFault", "pbm.fault.PBMFault", "pbm.version.version1", nil)
    create_data_type("pbm.fault.ResourceInUse", "PbmResourceInUse", "pbm.fault.PBMFault", "pbm.version.version1", [["type", "vmodl.TypeName", "pbm.version.version1", {:optional => true}], ["name", "string", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.placement.CompatibilityResult", "PbmPlacementCompatibilityResult", "vmodl.DynamicData", "pbm.version.version1", [["hub", "pbm.placement.PlacementHub", "pbm.version.version1"], ["matchingResources", "pbm.placement.MatchingResources[]", "pbm.version.version11", {:optional => true}], ["howMany", "long", "pbm.version.version11", {:optional => true}], ["utilization", "pbm.placement.ResourceUtilization[]", "pbm.version.version11", {:optional => true}], ["warning", "vmodl.MethodFault[]", "pbm.version.version1", {:optional => true}], ["error", "vmodl.MethodFault[]", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.placement.HubCapacityInfo", "PbmPlacementHubCapacityInfo", "vmodl.DynamicData", "pbm.version.version1", [["capacityCategory", "string", "pbm.version.version1"], ["percentageRemaining", "long", "pbm.version.version1"]])
    create_data_type("pbm.placement.HubSelectionInfo", "PbmPlacementHubSelectionInfo", "vmodl.DynamicData", "pbm.version.version1", [["hub", "pbm.placement.PlacementHub", "pbm.version.version1"], ["capacityInfo", "pbm.placement.HubCapacityInfo[]", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.placement.PlacementHub", "PbmPlacementHub", "vmodl.DynamicData", "pbm.version.version1", [["hubType", "string", "pbm.version.version1"], ["hubId", "string", "pbm.version.version1"]])
    create_data_type("pbm.placement.PlacementHubInfo", "PbmPlacementHubInfo", "vmodl.DynamicData", "pbm.version.version1", [["hub", "pbm.placement.PlacementHub", "pbm.version.version1"], ["hubType", "string", "pbm.version.version1"]])
    create_data_type("pbm.placement.PlacementSolution", "PbmPlacementSolution", "vmodl.DynamicData", "pbm.version.version1", [["subjectAssignment", "pbm.placement.SubjectAssignment[]", "pbm.version.version1"], ["cost", "pbm.placement.HubSelectionInfo[]", "pbm.version.version1", {:optional => true}]])
    create_managed_type("pbm.placement.PlacementSolver", "PbmPlacementSolver", "vmodl.ManagedObject", "pbm.version.version1", nil, [["queryMatchingHub", "PbmQueryMatchingHub", "pbm.version.version1", [["hubsToSearch", "pbm.placement.PlacementHub[]", "pbm.version.version1", {:optional => true}, nil], ["profile", "pbm.profile.ProfileId", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.placement.PlacementHub[]", "pbm.placement.PlacementHub[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["queryMatchingHubWithSpec", "PbmQueryMatchingHubWithSpec", "pbm.version.version1", [["hubsToSearch", "pbm.placement.PlacementHub[]", "pbm.version.version1", {:optional => true}, nil], ["createSpec", "pbm.profile.CapabilityBasedProfileCreateSpec", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.placement.PlacementHub[]", "pbm.placement.PlacementHub[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["checkCompatibility", "PbmCheckCompatibility", "pbm.version.version1", [["hubsToSearch", "pbm.placement.PlacementHub[]", "pbm.version.version1", {:optional => true}, nil], ["profile", "pbm.profile.ProfileId", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.placement.CompatibilityResult[]", "pbm.placement.CompatibilityResult[]"], "StorageProfile.View", nil], ["checkCompatibilityWithSpec", "PbmCheckCompatibilityWithSpec", "pbm.version.version1", [["hubsToSearch", "pbm.placement.PlacementHub[]", "pbm.version.version1", {:optional => true}, nil], ["profileSpec", "pbm.profile.CapabilityBasedProfileCreateSpec", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.placement.CompatibilityResult[]", "pbm.placement.CompatibilityResult[]"], "StorageProfile.View", nil], ["checkRequirements", "PbmCheckRequirements", "pbm.version.version11", [["hubsToSearch", "pbm.placement.PlacementHub[]", "pbm.version.version11", {:optional => true}, nil], ["placementSubjectRef", "pbm.ServerObjectRef", "pbm.version.version11", {:optional => true}, nil], ["placementSubjectRequirement", "pbm.placement.Requirement[]", "pbm.version.version11", {:optional => true}, nil]], [{:optional => true}, "pbm.placement.CompatibilityResult[]", "pbm.placement.CompatibilityResult[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]]])
    create_data_type("pbm.placement.PlacementSubject", "PbmPlacementSubject", "vmodl.DynamicData", "pbm.version.version1", [["subjectType", "string", "pbm.version.version1"], ["subjectId", "string", "pbm.version.version1"]])
    create_data_type("pbm.placement.Requirement", "PbmPlacementRequirement", "vmodl.DynamicData", "pbm.version.version11", nil)
    create_data_type("pbm.placement.ResourceUtilization", "PbmPlacementResourceUtilization", "vmodl.DynamicData", "pbm.version.version11", [["name", "pbm.ExtendedElementDescription", "pbm.version.version11"], ["description", "pbm.ExtendedElementDescription", "pbm.version.version11"], ["availableBefore", "long", "pbm.version.version11", {:optional => true}], ["availableAfter", "long", "pbm.version.version11", {:optional => true}], ["total", "long", "pbm.version.version11", {:optional => true}]])
    create_data_type("pbm.placement.SubjectAssignment", "PbmPlacementSubjectAssignment", "vmodl.DynamicData", "pbm.version.version1", [["subject", "pbm.placement.PlacementSubject", "pbm.version.version1"], ["hub", "pbm.placement.PlacementHub", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.profile.ApplyProfileOutcome", "PbmProfileApplyOutcome", "vmodl.DynamicData", "pbm.version.version1", [["profileId", "pbm.profile.ProfileId", "pbm.version.version1"], ["reconfigOutcome", "pbm.profile.ReconfigOutcome[]", "pbm.version.version1", {:optional => true}], ["fault", "vmodl.MethodFault", "pbm.version.version11", {:optional => true}]])
    create_data_type("pbm.profile.CapabilityBasedProfileCreateSpec", "PbmCapabilityProfileCreateSpec", "vmodl.DynamicData", "pbm.version.version1", [["name", "string", "pbm.version.version1"], ["description", "string", "pbm.version.version1", {:optional => true}], ["category", "string", "pbm.version.version11", {:optional => true}], ["resourceType", "pbm.profile.ResourceType", "pbm.version.version1"], ["constraints", "pbm.profile.CapabilityConstraints", "pbm.version.version1"]])
    create_data_type("pbm.profile.CapabilityBasedProfileUpdateSpec", "PbmCapabilityProfileUpdateSpec", "vmodl.DynamicData", "pbm.version.version1", [["name", "string", "pbm.version.version1", {:optional => true}], ["description", "string", "pbm.version.version1", {:optional => true}], ["constraints", "pbm.profile.CapabilityConstraints", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.profile.CapabilityConstraints", "PbmCapabilityConstraints", "vmodl.DynamicData", "pbm.version.version1", nil)
    create_data_type("pbm.profile.ChangeAssociationOp", "PbmProfileChangeAssociationOp", "vmodl.DynamicData", "pbm.version.version1", [["entity", "pbm.ServerObjectRef", "pbm.version.version1"]])
    create_data_type("pbm.profile.DataServiceToPoliciesMap", "PbmDataServiceToPoliciesMap", "vmodl.DynamicData", "pbm.version.version11", [["dataServicePolicy", "pbm.profile.ProfileId", "pbm.version.version11"], ["parentStoragePolicies", "pbm.profile.ProfileId[]", "pbm.version.version11", {:optional => true}], ["fault", "vmodl.MethodFault", "pbm.version.version11", {:optional => true}]])
    create_data_type("pbm.profile.DefaultProfileInfo", "PbmDefaultProfileInfo", "vmodl.DynamicData", "pbm.version.version2", [["datastores", "pbm.placement.PlacementHub[]", "pbm.version.version2"], ["defaultProfile", "pbm.profile.Profile", "pbm.version.version2", {:optional => true}]])
    create_data_type("pbm.profile.DissociateOp", "PbmProfileDissociateOp", "pbm.profile.ChangeAssociationOp", "pbm.version.version1", [["profile", "pbm.profile.ProfileId", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.profile.IofilterInfo", "PbmIofilterInfo", "vmodl.DynamicData", "pbm.version.version2", [["vibId", "string", "pbm.version.version2"], ["filterType", "string", "pbm.version.version2", {:optional => true}]])
    create_enum_type("pbm.profile.IofilterInfo.FilterType", "PbmIofilterInfoFilterType", "pbm.version.version1", ["INSPECTION", "COMPRESSION", "ENCRYPTION", "REPLICATION", "CACHE", "DATAPROVIDER", "DATASTOREIOCONTROL"])
    create_data_type("pbm.profile.PolicyAssociation", "PbmPolicyAssociation", "vmodl.DynamicData", "pbm.version.version11", [["entity", "pbm.ServerObjectRef", "pbm.version.version11"], ["policySpec", "vim.vm.ProfileSpec", "pbm.version.version11", {:optional => true}], ["defaultPolicy", "boolean", "pbm.version.version11"], ["hub", "pbm.placement.PlacementHub", "pbm.version.version11"]])
    create_data_type("pbm.profile.Profile", "PbmProfile", "vmodl.DynamicData", "pbm.version.version1", [["profileId", "pbm.profile.ProfileId", "pbm.version.version1"], ["name", "string", "pbm.version.version1"], ["description", "string", "pbm.version.version1", {:optional => true}], ["creationTime", "vmodl.DateTime", "pbm.version.version1"], ["createdBy", "string", "pbm.version.version1"], ["lastUpdatedTime", "vmodl.DateTime", "pbm.version.version1"], ["lastUpdatedBy", "string", "pbm.version.version1"]])
    create_data_type("pbm.profile.ProfileId", "PbmProfileId", "vmodl.DynamicData", "pbm.version.version1", [["uniqueId", "string", "pbm.version.version1"]])
    create_managed_type("pbm.profile.ProfileManager", "PbmProfileProfileManager", "vmodl.ManagedObject", "pbm.version.version1", nil, [["fetchResourceType", "PbmFetchResourceType", "pbm.version.version1", [], [{:optional => true}, "pbm.profile.ResourceType[]", "pbm.profile.ResourceType[]"], "StorageProfile.View", nil], ["fetchVendorInfo", "PbmFetchVendorInfo", "pbm.version.version1", [["resourceType", "pbm.profile.ResourceType", "pbm.version.version1", {:optional => true}, nil]], [{:optional => true}, "pbm.capability.provider.CapabilityObjectSchema.VendorResourceTypeInfo[]", "pbm.capability.provider.CapabilityObjectSchema.VendorResourceTypeInfo[]"], "StorageProfile.View", nil], ["fetchCapabilityMetadata", "PbmFetchCapabilityMetadata", "pbm.version.version1", [["resourceType", "pbm.profile.ResourceType", "pbm.version.version1", {:optional => true}, nil], ["vendorUuid", "string", "pbm.version.version1", {:optional => true}, nil]], [{:optional => true}, "pbm.capability.provider.CapabilityObjectMetadataPerCategory[]", "pbm.capability.provider.CapabilityObjectMetadataPerCategory[]"], "StorageProfile.View", nil], ["fetchCapabilitySchema", "PbmFetchCapabilitySchema", "pbm.version.version11", [["vendorUuid", "string", "pbm.version.version11", {:optional => true}, nil], ["lineOfService", "string[]", "pbm.version.version11", {:optional => true}, nil]], [{:optional => true}, "pbm.capability.provider.CapabilityObjectSchema[]", "pbm.capability.provider.CapabilityObjectSchema[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["create", "PbmCreate", "pbm.version.version1", [["createSpec", "pbm.profile.CapabilityBasedProfileCreateSpec", "pbm.version.version1", {}, nil]], [{}, "pbm.profile.ProfileId", "pbm.profile.ProfileId"], "StorageProfile.Update", ["vmodl.fault.InvalidArgument", "pbm.fault.ProfileStorageFault", "pbm.fault.DuplicateName"]], ["update", "PbmUpdate", "pbm.version.version1", [["profileId", "pbm.profile.ProfileId", "pbm.version.version1", {}, nil], ["updateSpec", "pbm.profile.CapabilityBasedProfileUpdateSpec", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["vmodl.fault.InvalidArgument", "pbm.fault.ProfileStorageFault"]], ["delete", "PbmDelete", "pbm.version.version1", [["profileId", "pbm.profile.ProfileId[]", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.profile.ProfileOperationOutcome[]", "pbm.profile.ProfileOperationOutcome[]"], "StorageProfile.Update", nil], ["associate", "PbmAssociate", "pbm.version.version1", [["entity", "pbm.ServerObjectRef", "pbm.version.version1", {}, nil], ["profile", "pbm.profile.ProfileId", "pbm.version.version1", {}, nil], ["replSpec", "vim.vm.replication.ReplicationSpec", "pbm.version.version11", {:optional => true}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["pbm.fault.PBMFault"]], ["dissociate", "PbmDissociate", "pbm.version.version1", [["entity", "pbm.ServerObjectRef", "pbm.version.version1", {}, nil], ["profile", "pbm.profile.ProfileId", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault"]], ["reconfigVmAssociations", "PbmReconfigureVmAssociations", "pbm.version.version1", [["ops", "pbm.profile.ChangeAssociationOp[]", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["pbm.fault.PBMFault"]], ["queryProfile", "PbmQueryProfile", "pbm.version.version1", [["resourceType", "pbm.profile.ResourceType", "pbm.version.version1", {}, nil], ["profileCategory", "string", "pbm.version.version1", {:optional => true}, nil]], [{:optional => true}, "pbm.profile.ProfileId[]", "pbm.profile.ProfileId[]"], "StorageProfile.View", ["vmodl.fault.InvalidArgument"]], ["queryDefaultCapabilityValues", "PbmQueryDefaultCapabilityValues", "pbm.version.version1", [["entity", "pbm.ServerObjectRef", "pbm.version.version1", {:optional => true}, nil], ["vvolType", "string[]", "pbm.version.version1", {:optional => true}, nil]], [{:optional => true}, "pbm.profile.ProfileId[]", "pbm.profile.ProfileId[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["retrieveContent", "PbmRetrieveContent", "pbm.version.version1", [["profileIds", "pbm.profile.ProfileId[]", "pbm.version.version1", {}, nil]], [{}, "pbm.profile.Profile[]", "pbm.profile.Profile[]"], "StorageProfile.View", ["vmodl.fault.InvalidArgument"]], ["queryAssociatedProfiles", "PbmQueryAssociatedProfiles", "pbm.version.version1", [["entities", "pbm.ServerObjectRef[]", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.profile.QueryProfileResult[]", "pbm.profile.QueryProfileResult[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["queryAssociatedProfile", "PbmQueryAssociatedProfile", "pbm.version.version1", [["entity", "pbm.ServerObjectRef", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.profile.ProfileId[]", "pbm.profile.ProfileId[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["queryAssociatedEntity", "PbmQueryAssociatedEntity", "pbm.version.version1", [["profile", "pbm.profile.ProfileId", "pbm.version.version1", {}, nil], ["entityType", "string", "pbm.version.version1", {:optional => true}, nil]], [{:optional => true}, "pbm.ServerObjectRef[]", "pbm.ServerObjectRef[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["retrieveContentAsString", "PbmRetrieveProfileContentAsString", "pbm.version.version1", [["profileId", "pbm.profile.ProfileId", "pbm.version.version1", {}, nil], ["hub", "pbm.placement.PlacementHub", "pbm.version.version1", {}, nil], ["spec", "vim.vm.replication.ReplicationSpec", "pbm.version.version11", {:optional => true}, nil]], [{:optional => true}, "string", "string"], "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault"]], ["retrieveContentForHub", "PbmRetrieveProfileContentForHub", "pbm.version.version11", [["profileId", "pbm.profile.ProfileId", "pbm.version.version11", {}, nil], ["hub", "pbm.placement.PlacementHub", "pbm.version.version11", {}, nil]], [{:optional => true}, "pbm.profile.Profile", "pbm.profile.Profile"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["retrieveContentAsStringBySpec", "PbmRetrieveProfileContentAsStringBySpec", "pbm.version.version2", [["profileSpec", "pbm.profile.CapabilityBasedProfileCreateSpec", "pbm.version.version2", {}, nil], ["hub", "pbm.placement.PlacementHub", "pbm.version.version2", {}, nil]], [{:optional => true}, "string", "string"], "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault"]], ["applyAssociated", "PbmApplyAssociated", "pbm.version.version1", [["entities", "pbm.ServerObjectRef[]", "pbm.version.version1", {}, nil], ["applyOnChildren", "boolean", "pbm.version.version1", {:optional => true}, nil]], [{}, "pbm.profile.ReconfigOutcome[]", "pbm.profile.ReconfigOutcome[]"], "StorageProfile.Update", nil], ["applyProfile", "PbmApplyProfile", "pbm.version.version1", [["profiles", "pbm.profile.ProfileId[]", "pbm.version.version1", {}, nil]], [{}, "pbm.profile.ApplyProfileOutcome[]", "pbm.profile.ApplyProfileOutcome[]"], "StorageProfile.Update", nil], ["queryDefaultRequirementProfile", "PbmQueryDefaultRequirementProfile", "pbm.version.version2", [["hub", "pbm.placement.PlacementHub", "pbm.version.version2", {}, nil]], [{:optional => true}, "pbm.profile.ProfileId", "pbm.profile.ProfileId"], "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.NonExistentHubs", "pbm.fault.PBMFault"]], ["resetDefaultRequirementProfile", "PbmResetDefaultRequirementProfile", "pbm.version.version1", [["profile", "pbm.profile.ProfileId", "pbm.version.version1", {:optional => true}, nil]], [{}, "void", "void"], "StorageProfile.Update", nil], ["configureErrorMode", "ConfigureErrorMode", "pbm.version.version1", [["enable", "boolean", "pbm.version.version1", {}, nil], ["methodToFail", "string", "pbm.version.version1", {:optional => true}, nil], ["fault", "string", "pbm.version.version1", {:optional => true}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["vmodl.fault.NotSupported"]], ["assignDefaultRequirementProfile", "PbmAssignDefaultRequirementProfile", "pbm.version.version2", [["profile", "pbm.profile.ProfileId", "pbm.version.version2", {}, nil], ["datastores", "pbm.placement.PlacementHub[]", "pbm.version.version2", {}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["vmodl.fault.InvalidArgument", "pbm.fault.LegacyHubsNotSupported", "pbm.fault.NonExistentHubs", "pbm.fault.PBMFault"]], ["findApplicableDefaultProfile", "PbmFindApplicableDefaultProfile", "pbm.version.version2", [["datastores", "pbm.placement.PlacementHub[]", "pbm.version.version2", {}, nil]], [{:optional => true}, "pbm.profile.Profile[]", "pbm.profile.Profile[]"], "StorageProfile.View", ["pbm.fault.LegacyHubsNotSupported", "pbm.fault.NonExistentHubs", "pbm.fault.PBMFault", "vmodl.fault.InvalidArgument"]], ["queryDefaultRequirementProfiles", "PbmQueryDefaultRequirementProfiles", "pbm.version.version2", [["datastores", "pbm.placement.PlacementHub[]", "pbm.version.version2", {}, nil]], [{}, "pbm.profile.DefaultProfileInfo[]", "pbm.profile.DefaultProfileInfo[]"], "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.NonExistentHubs", "pbm.fault.PBMFault"]], ["resetVSanDefaultProfile", "PbmResetVSanDefaultProfile", "pbm.version.version2", [], [{}, "void", "void"], "StorageProfile.Update", nil], ["querySpaceStatsForStorageContainer", "PbmQuerySpaceStatsForStorageContainer", "pbm.version.version2", [["datastore", "pbm.ServerObjectRef", "pbm.version.version2", {}, nil], ["capabilityProfileId", "pbm.profile.ProfileId[]", "pbm.version.version2", {:optional => true}, nil]], [{:optional => true}, "pbm.profile.provider.DatastoreSpaceStatistics[]", "pbm.profile.provider.DatastoreSpaceStatistics[]"], "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault"]], ["queryIOFiltersFromProfileId", "PbmQueryIOFiltersFromProfileId", "pbm.version.version2", [["profileIds", "pbm.profile.ProfileId[]", "pbm.version.version2", {}, nil]], [{}, "pbm.profile.ProfileToIofilterMap[]", "pbm.profile.ProfileToIofilterMap[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["queryIOFilterInfo", "PbmQueryIOFilterInfo", "pbm.version.version2", [["vibIds", "string[]", "pbm.version.version2", {}, nil]], [{}, "pbm.profile.IofilterInfo[]", "pbm.profile.IofilterInfo[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["queryAssociatedEntities", "PbmQueryAssociatedEntities", "pbm.version.version11", [["profiles", "pbm.profile.ProfileId[]", "pbm.version.version11", {:optional => true}, nil]], [{:optional => true}, "pbm.profile.QueryProfileResult[]", "pbm.profile.QueryProfileResult[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["queryParentStoragePolicies", "PbmQueryParentStoragePolicies", "pbm.version.version11", [["policy", "pbm.profile.ProfileId[]", "pbm.version.version11", {:optional => true}, nil]], [{:optional => true}, "pbm.profile.DataServiceToPoliciesMap[]", "pbm.profile.DataServiceToPoliciesMap[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["preProvisionProcess", "PbmPreProvisionProcess", "pbm.version.version11", [["vmAssociations", "pbm.profile.VmAssociations", "pbm.version.version11", {}, nil]], [{}, "pbm.profile.VmAssociations", "pbm.profile.VmAssociations"], "StorageProfile.View", ["pbm.fault.PBMFault"]]])
    create_data_type("pbm.profile.ProfileOperationOutcome", "PbmProfileOperationOutcome", "vmodl.DynamicData", "pbm.version.version1", [["profileId", "pbm.profile.ProfileId", "pbm.version.version1"], ["fault", "vmodl.MethodFault", "pbm.version.version1", {:optional => true}]])
    create_managed_type("pbm.profile.ProfileProviderRegistry", "PbmProfileProviderRegistry", "vmodl.ManagedObject", "pbm.version.version1", nil, [["registerProfileProvider", "PbmRegisterProfileProvider", "pbm.version.version1", [["providerInfo", "pbm.profile.provider.ProfileProviderInfo", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.View", ["pbm.fault.AlreadyExists", "vmodl.fault.InvalidArgument"]], ["unregisterProfileProvider", "PbmUnregisterProfileProvider", "pbm.version.version1", [["providerUid", "string", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.View", ["pbm.fault.NotFound"]]])
    create_data_type("pbm.profile.ProfileToIofilterMap", "PbmProfileToIofilterMap", "vmodl.DynamicData", "pbm.version.version2", [["key", "pbm.profile.ProfileId", "pbm.version.version2"], ["iofilters", "pbm.profile.IofilterInfo[]", "pbm.version.version2", {:optional => true}], ["fault", "vmodl.MethodFault", "pbm.version.version2", {:optional => true}]])
    create_data_type("pbm.profile.ProfileType", "PbmProfileType", "vmodl.DynamicData", "pbm.version.version1", [["uniqueId", "string", "pbm.version.version1"]])
    create_data_type("pbm.profile.QueryProfileResult", "PbmQueryProfileResult", "vmodl.DynamicData", "pbm.version.version1", [["object", "pbm.ServerObjectRef", "pbm.version.version1"], ["profileId", "pbm.profile.ProfileId[]", "pbm.version.version1", {:optional => true}], ["fault", "vmodl.MethodFault", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.profile.ReconfigOutcome", "PbmProfileReconfigOutcome", "vmodl.DynamicData", "pbm.version.version1", [["entity", "pbm.ServerObjectRef", "pbm.version.version1"], ["taskMoid", "string", "pbm.version.version1", {:optional => true}], ["fault", "vmodl.MethodFault", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.profile.ResourceType", "PbmProfileResourceType", "vmodl.DynamicData", "pbm.version.version1", [["resourceType", "string", "pbm.version.version1"]])
    create_enum_type("pbm.profile.ResourceTypeEnum", "PbmProfileResourceTypeEnum", "pbm.version.version1", ["STORAGE"])
    create_data_type("pbm.profile.SubProfileCapabilityConstraints", "PbmCapabilitySubProfileConstraints", "pbm.profile.CapabilityConstraints", "pbm.version.version1", [["subProfiles", "pbm.profile.SubProfileCapabilityConstraints.SubProfile[]", "pbm.version.version1"]])
    create_data_type("pbm.profile.SubProfileCapabilityConstraints.SubProfile", "PbmCapabilitySubProfile", "vmodl.DynamicData", "pbm.version.version1", [["name", "string", "pbm.version.version1"], ["capability", "pbm.capability.CapabilityInstance[]", "pbm.version.version1"], ["forceProvision", "boolean", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.profile.SubProfileCapabilityConstraints.SubProfileWithCandidates", "PbmCapabilitySubProfileWithCandidates", "pbm.profile.SubProfileCapabilityConstraints.SubProfile", "pbm.version.version1", [["candidateHubs", "pbm.placement.PlacementHub[]", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.profile.VmAssociations", "PbmVmAssociations", "vmodl.DynamicData", "pbm.version.version11", [["operation", "string", "pbm.version.version11"], ["vm", "pbm.ServerObjectRef", "pbm.version.version11", {:optional => true}], ["policyAssociations", "pbm.profile.PolicyAssociation[]", "pbm.version.version11", {:optional => true}], ["fault", "vmodl.MethodFault", "pbm.version.version11", {:optional => true}]])
    create_enum_type("pbm.profile.VmAssociations.Operation", "PbmVmOperation", "pbm.version.version11", ["CREATE", "RECONFIGURE", "MIGRATE", "CLONE"])
    create_data_type("pbm.profile.provider.DatastoreSpaceStatistics", "PbmDatastoreSpaceStatistics", "vmodl.DynamicData", "pbm.version.version2", [["profileId", "string", "pbm.version.version2", {:optional => true}], ["physicalTotalInMB", "long", "pbm.version.version2"], ["physicalFreeInMB", "long", "pbm.version.version2"], ["physicalUsedInMB", "long", "pbm.version.version2"], ["logicalLimitInMB", "long", "pbm.version.version2", {:optional => true}], ["logicalFreeInMB", "long", "pbm.version.version2"], ["logicalUsedInMB", "long", "pbm.version.version2"]])
    create_enum_type("pbm.provider.AtomFeedQsProviderType", "PbmAtomFeedQsProviderTye", "pbm.version.version1", ["ASSOCIATION", "COMPLIANCE", "CAPABILITY_METADATA", "CAPABILITY_PROFILE", "REQUIREMENTS_PROFILE"])
    create_managed_type("pbm.provider.Provider", "PbmProvider", "vmodl.ManagedObject", "pbm.version.version1", nil, nil)
    create_data_type("pbm.provider.ProviderInfo", "PbmProviderInfo", "vmodl.DynamicData", "pbm.version.version1", [["uniqueId", "string", "pbm.version.version1"], ["location", "string", "pbm.version.version1"], ["description", "string", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.replication.QueryReplicationGroupResult", "PbmQueryReplicationGroupResult", "vmodl.DynamicData", "pbm.version.version11", [["object", "pbm.ServerObjectRef", "pbm.version.version11"], ["replicationGroupId", "vim.vm.replication.ReplicationGroupId", "pbm.version.version11", {:optional => true}], ["fault", "vmodl.MethodFault", "pbm.version.version11", {:optional => true}]])
    create_managed_type("pbm.replication.ReplicationManager", "PbmReplicationManager", "vmodl.ManagedObject", "pbm.version.version11", nil, [["queryReplicationGroups", "PbmQueryReplicationGroups", "pbm.version.version11", [["entities", "pbm.ServerObjectRef[]", "pbm.version.version11", {:optional => true}, nil]], [{:optional => true}, "pbm.replication.QueryReplicationGroupResult[]", "pbm.replication.QueryReplicationGroupResult[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]]])
    create_managed_type("pbm.AtomFeedQsProvider", "PbmAtomFeedProvider", "pbm.provider.Provider", "pbm.version.version1", nil, [["queryAtomFeedQsProviderIds", "PbmProviderQueryAtomFeedQsProviderIds", "pbm.version.version1", [], [{:optional => true}, "string[]", "string[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]]])
    create_managed_type("pbm.association.provider.AssociationProvider", "PbmAssociationProvider", "pbm.provider.Provider", "pbm.version.version1", nil, [["queryAssociatedProfiles", "PbmAssociationProviderQueryAssociatedProfiles", "pbm.version.version1", [["entities", "pbm.ServerObjectRef[]", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.profile.QueryProfileResult[]", "pbm.profile.QueryProfileResult[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["queryAssociatedProfile", "PbmAssociationProviderQueryAssociatedProfile", "pbm.version.version1", [["entity", "pbm.ServerObjectRef", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.profile.ProfileId[]", "pbm.profile.ProfileId[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["queryAssociatedEntity", "PbmAssociationProviderQueryAssociatedEntity", "pbm.version.version1", [["profile", "pbm.profile.ProfileId", "pbm.version.version1", {}, nil], ["entityType", "string", "pbm.version.version1", {:optional => true}, nil]], [{:optional => true}, "pbm.ServerObjectRef[]", "pbm.ServerObjectRef[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]]])
    create_data_type("pbm.association.provider.AssociationProviderInfo", "PbmAssociationProviderInfo", "pbm.provider.ProviderInfo", "pbm.version.version1", [["provider", "pbm.association.provider.AssociationProvider", "pbm.version.version1"]])
    create_data_type("pbm.capability.CapabilityInstance", "PbmCapabilityInstance", "vmodl.DynamicData", "pbm.version.version1", [["id", "pbm.capability.CapabilityMetadata.UniqueId", "pbm.version.version1"], ["constraint", "pbm.capability.ConstraintInstance[]", "pbm.version.version1"]])
    create_data_type("pbm.capability.GenericTypeInfo", "PbmCapabilityGenericTypeInfo", "pbm.capability.TypeInfo", "pbm.version.version1", [["genericTypeName", "string", "pbm.version.version1"]])
    create_managed_type("pbm.compliance.provider.ComplianceProvider", "PbmComplianceProvider", "pbm.provider.Provider", "pbm.version.version1", nil, [["checkCompliance", "PbmProviderCheckCompliance", "pbm.version.version1", [["entities", "pbm.ServerObjectRef[]", "pbm.version.version1", {}, nil], ["profile", "pbm.profile.ProfileId", "pbm.version.version1", {}, nil]], [{}, "pbm.compliance.ComplianceResult[]", "pbm.compliance.ComplianceResult[]"], "StorageProfile.View", nil]])
    create_data_type("pbm.compliance.provider.ComplianceProviderInfo", "PbmComplianceProviderInfo", "pbm.provider.ProviderInfo", "pbm.version.version1", [["metadata", "pbm.association.AssociationMetadata", "pbm.version.version1"], ["provider", "pbm.compliance.provider.ComplianceProvider", "pbm.version.version1"]])
    create_data_type("pbm.fault.AlreadyExists", "PbmAlreadyExists", "pbm.fault.PBMFault", "pbm.version.version1", [["name", "string", "pbm.version.version1", {:optional => true}]])
    create_data_type("pbm.fault.CompatibilityCheckFault", "PbmCompatibilityCheckFault", "pbm.fault.PBMFault", "pbm.version.version1", [["hub", "pbm.placement.PlacementHub", "pbm.version.version1"]])
    create_data_type("pbm.fault.DefaultProfileAppliesFault", "PbmDefaultProfileAppliesFault", "pbm.fault.CompatibilityCheckFault", "pbm.version.version1", nil)
    create_data_type("pbm.fault.DuplicateName", "PbmDuplicateName", "pbm.fault.PBMFault", "pbm.version.version1", [["name", "string", "pbm.version.version1"]])
    create_data_type("pbm.fault.InvalidLogin", "PbmFaultInvalidLogin", "pbm.fault.PBMFault", "pbm.version.version2", nil)
    create_data_type("pbm.fault.LegacyHubsNotSupported", "PbmLegacyHubsNotSupported", "pbm.fault.PBMFault", "pbm.version.version2", [["hubs", "pbm.placement.PlacementHub[]", "pbm.version.version2"]])
    create_data_type("pbm.fault.NonExistentHubs", "PbmNonExistentHubs", "pbm.fault.PBMFault", "pbm.version.version2", [["hubs", "pbm.placement.PlacementHub[]", "pbm.version.version2"]])
    create_data_type("pbm.fault.NotFound", "PbmFaultNotFound", "pbm.fault.PBMFault", "pbm.version.version1", nil)
    create_data_type("pbm.fault.PropertyMismatchFault", "PbmPropertyMismatchFault", "pbm.fault.CompatibilityCheckFault", "pbm.version.version1", [["capabilityInstanceId", "pbm.capability.CapabilityMetadata.UniqueId", "pbm.version.version1"], ["requirementPropertyInstance", "pbm.capability.PropertyInstance", "pbm.version.version1"]])
    create_data_type("pbm.placement.CapabilityConstraintsRequirement", "PbmPlacementCapabilityConstraintsRequirement", "pbm.placement.Requirement", "pbm.version.version11", [["constraints", "pbm.profile.CapabilityConstraints", "pbm.version.version11"]])
    create_data_type("pbm.placement.CapabilityProfileRequirement", "PbmPlacementCapabilityProfileRequirement", "pbm.placement.Requirement", "pbm.version.version11", [["profileId", "pbm.profile.ProfileId", "pbm.version.version11"]])
    create_data_type("pbm.placement.MatchingReplicationResources", "PbmPlacementMatchingReplicationResources", "pbm.placement.MatchingResources", "pbm.version.version11", [["replicationGroup", "vim.vm.replication.ReplicationGroupId[]", "pbm.version.version11", {:optional => true}]])
    create_managed_type("pbm.placement.PlacementHubFinder", "PbmPlacementHubFinder", "pbm.provider.Provider", "pbm.version.version1", nil, [["findMatchingHub", "PbmPlacementHubFinderFindMatchingHub", "pbm.version.version1", [["hubsToSearch", "pbm.placement.PlacementHub[]", "pbm.version.version1", {:optional => true}, nil], ["profile", "pbm.profile.ProfileId", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.placement.CompatibilityResult[]", "pbm.placement.CompatibilityResult[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["findMatchingHubWithSpec", "PbmPlacementHubFinderFindMatchingHubWithSpec", "pbm.version.version1", [["hubsToSearch", "pbm.placement.PlacementHub[]", "pbm.version.version1", {:optional => true}, nil], ["createSpec", "pbm.profile.CapabilityBasedProfileCreateSpec", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.placement.CompatibilityResult[]", "pbm.placement.CompatibilityResult[]"], "StorageProfile.View", ["pbm.fault.PBMFault"]]])
    create_data_type("pbm.placement.PlacementHubFinder.Info", "PbmPlacementHubFinderInfo", "pbm.provider.ProviderInfo", "pbm.version.version1", [["finderType", "string", "pbm.version.version1"], ["supportedHubType", "string", "pbm.version.version1"], ["finder", "pbm.placement.PlacementHubFinder", "pbm.version.version1"]])
    create_data_type("pbm.profile.AssociateOp", "PbmProfileAssociateOp", "pbm.profile.ChangeAssociationOp", "pbm.version.version1", [["profile", "pbm.profile.ProfileId", "pbm.version.version1"], ["diskEntity", "pbm.ServerObjectRef[]", "pbm.version.version11", {:optional => true}], ["replicationSpec", "vim.vm.replication.ReplicationSpec", "pbm.version.version11", {:optional => true}]])
    create_data_type("pbm.profile.CapabilityBasedProfile", "PbmCapabilityProfile", "pbm.profile.Profile", "pbm.version.version1", [["profileCategory", "string", "pbm.version.version1"], ["resourceType", "pbm.profile.ResourceType", "pbm.version.version1"], ["constraints", "pbm.profile.CapabilityConstraints", "pbm.version.version1"], ["generationId", "long", "pbm.version.version1", {:optional => true}], ["isDefault", "boolean", "pbm.version.version1"], ["systemCreatedProfileType", "string", "pbm.version.version2", {:optional => true}], ["lineOfService", "string", "pbm.version.version11", {:optional => true}]])
    create_enum_type("pbm.profile.CapabilityBasedProfile.ProfileCategoryEnum", "PbmProfileCategoryEnum", "pbm.version.version1", ["REQUIREMENT", "RESOURCE", "DATA_SERVICE_POLICY"])
    create_enum_type("pbm.profile.CapabilityBasedProfile.SystemCreatedProfileType", "PbmSystemCreatedProfileType", "pbm.version.version2", ["VsanDefaultProfile", "VVolDefaultProfile", "PmemDefaultProfile"])
    create_data_type("pbm.profile.DefaultCapabilityBasedProfile", "PbmDefaultCapabilityProfile", "pbm.profile.CapabilityBasedProfile", "pbm.version.version1", [["vvolType", "string[]", "pbm.version.version1"], ["containerId", "string", "pbm.version.version1"]])
    create_data_type("pbm.profile.DefaultProfileAssociateOp", "PbmProfileDefaultProfileAssociateOp", "pbm.profile.AssociateOp", "pbm.version.version2", nil)
    create_managed_type("pbm.profile.provider.ProfileProvider", "PbmProfileProvider", "pbm.provider.Provider", "pbm.version.version1", nil, [["fetchProfile", "PbmFetchProfile", "pbm.version.version1", [["resourceType", "pbm.profile.ResourceType", "pbm.version.version1", {}, nil], ["profileCategory", "string", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.profile.ProfileId[]", "pbm.profile.ProfileId[]"], "StorageProfile.View", ["vmodl.fault.InvalidArgument"]], ["fetchDefaultProfile", "PbmFetchDefaultProfile", "pbm.version.version1", [["entity", "pbm.ServerObjectRef", "pbm.version.version1", {}, nil], ["vvolType", "string[]", "pbm.version.version1", {}, nil]], [{:optional => true}, "pbm.profile.ProfileId[]", "pbm.profile.ProfileId[]"], "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault"]], ["fetchContent", "PbmFetchContent", "pbm.version.version1", [["profileIds", "pbm.profile.ProfileId[]", "pbm.version.version1", {}, nil]], [{}, "pbm.profile.Profile[]", "pbm.profile.Profile[]"], "StorageProfile.View", ["vmodl.fault.InvalidArgument"]], ["fetchContentAsString", "PbmFetchContentAsString", "pbm.version.version1", [["profileId", "pbm.profile.ProfileId", "pbm.version.version1", {}, nil], ["hub", "pbm.placement.PlacementHub", "pbm.version.version1", {}, nil], ["replSpec", "vim.vm.replication.ReplicationSpec", "pbm.version.version11", {:optional => true}, nil]], [{}, "string", "string"], "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault"]], ["fetchContentForHub", "PbmFetchContentForHub", "pbm.version.version11", [["profileId", "pbm.profile.ProfileId", "pbm.version.version11", {}, nil], ["hub", "pbm.placement.PlacementHub", "pbm.version.version11", {}, nil]], [{:optional => true}, "pbm.profile.Profile", "pbm.profile.Profile"], "StorageProfile.View", ["pbm.fault.PBMFault"]], ["fetchContentAsStringBySpec", "PbmFetchContentAsStringBySpec", "pbm.version.version2", [["profileSpec", "pbm.profile.CapabilityBasedProfileCreateSpec", "pbm.version.version2", {}, nil], ["hub", "pbm.placement.PlacementHub", "pbm.version.version2", {}, nil]], [{}, "string", "string"], "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault"]], ["queryAtomFeedQsProviderIds", "PbmQueryProfileQsProviderIds", "pbm.version.version1", [], [{:optional => true}, "string[]", "string[]"], "StorageProfile.View", nil], ["validateDefaultPolicyForHubs", "PbmValidateDefaultPolicyForHubs", "pbm.version.version2", [["profile", "pbm.profile.CapabilityBasedProfile", "pbm.version.version2", {}, nil], ["hubs", "pbm.placement.PlacementHub[]", "pbm.version.version2", {}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault"]], ["querySpaceStatsForStorageContainer", "PbmQuerySpaceStatsForContainer", "pbm.version.version2", [["datastore", "pbm.ServerObjectRef", "pbm.version.version2", {}, nil], ["capabilityProfileId", "pbm.profile.ProfileId[]", "pbm.version.version2", {:optional => true}, nil]], [{:optional => true}, "pbm.profile.provider.DatastoreSpaceStatistics[]", "pbm.profile.provider.DatastoreSpaceStatistics[]"], "StorageProfile.View", ["vmodl.fault.InvalidArgument", "pbm.fault.PBMFault"]], ["searchApplicableDefaultProfile", "PbmSearchApplicableDefaultProfile", "pbm.version.version2", [["profiles", "pbm.profile.Profile[]", "pbm.version.version2", {}, nil], ["hubInfo", "pbm.placement.PlacementHubInfo[]", "pbm.version.version2", {}, nil]], [{:optional => true}, "pbm.profile.Profile[]", "pbm.profile.Profile[]"], "StorageProfile.View", ["pbm.fault.LegacyHubsNotSupported", "pbm.fault.NonExistentHubs", "pbm.fault.PBMFault", "vmodl.fault.InvalidArgument"]]])
    create_data_type("pbm.profile.provider.ProfileProviderInfo", "PbmProfileProviderInfo", "pbm.provider.ProviderInfo", "pbm.version.version1", [["profileType", "pbm.profile.ProfileType[]", "pbm.version.version1"], ["provider", "pbm.profile.provider.ProfileProvider", "pbm.version.version1"]])
    create_data_type("pbm.fault.CapabilityProfilePropertyMismatchFault", "PbmCapabilityProfilePropertyMismatchFault", "pbm.fault.PropertyMismatchFault", "pbm.version.version1", [["resourcePropertyInstance", "pbm.capability.PropertyInstance", "pbm.version.version1"]])
    create_data_type("pbm.fault.IncompatibleVendorSpecificRuleSet", "PbmIncompatibleVendorSpecificRuleSet", "pbm.fault.CapabilityProfilePropertyMismatchFault", "pbm.version.version1", nil)
    create_managed_type("pbm.placement.HubFinderRegistry", "PbmPlacementHubFinderRegistry", "vmodl.ManagedObject", "pbm.version.version1", nil, [["registerPlacementHubFinder", "PbmRegisterPlacementHubFinder", "pbm.version.version1", [["finderInfo", "pbm.placement.PlacementHubFinder.Info", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["pbm.fault.PBMFault"]], ["unregisterPlacementHubFinder", "PbmUnregisterPlacementHubFinder", "pbm.version.version1", [["uniqueId", "string", "pbm.version.version1", {}, nil]], [{}, "void", "void"], "StorageProfile.Update", ["pbm.fault.NotFound", "pbm.fault.PBMFault"]]])
  end
end

